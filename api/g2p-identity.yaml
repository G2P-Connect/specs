openapi: 3.0.0
info:
  title: Identity
  description: 'Discussions <a href= "https://github.com/G2P-Connect/.github/discussions/16">thread</a> <br><br> Manage issuance of digital credential'
  version: 0.1.0
  contact:
    name: G2P Connect
    email: info@g2pconnect.global
  license:
    name: G2P Connect License
    url: 'https://github.com/G2P-Connect/specs/blob/main/LICENSE'
servers:
  - url: 'https://sandbox.dpg.org/{namespace}/v0.1.0'
    description: Sandbox Server
paths:
  /identity/verify:
    post:
      summary: 'ID-VRFY : /identity/verify'
      description: Verification of person's demographics against foundational id
      operationId: post_g2p_id_verify
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgHeader'
                    - properties:
                        action:
                          enum:
                            - issue
                message:
                  type: object
                  properties:
                    transaction_id:
                      $ref: '#/components/schemas/TransactionId'
                    verify_request:
                      type: array
                      items:
                        $ref: '#/components/schemas/VerifyRequest'
                  required:
                    - transaction_id
                    - verify_request
              required:
                - header
                - message
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - issue
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
  /credential/on-issue:
    post:
      summary: 'ID-ON-VRFY : /identity/on-issue'
      description: Verification response through callback
      operationId: post_g2p_id_on-verify
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgCallbackHeader'
                    - properties:
                        action:
                          enum:
                            - on-issue
                message:
                  type: object
                  properties:
                    transaction_id:
                      $ref: '#/components/schemas/TransactionId'
                    verify_response:
                      type: array
                      items:
                        $ref: '#/components/schemas/VerifyResponse'
                  required:
                    - transaction_id
                    - verify_response
              required:
                - header
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - on-issue
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
  /credential/txn/status:
    post:
      summary: 'ID-TXNSTS : /identity/txn/status'
      description: Perform async status check of previous identity transanctions using transaction_id and/or reference_id(s)
      operationId: post_g2p_id_txnstatus
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgHeader'
                    - properties:
                        action:
                          enum:
                            - issue
                            - search
                            - status
                message:
                  type: object
                  properties:
                    transaction_id:
                      $ref: '#/components/schemas/TransactionId'
                    txnstatus_request:
                      $ref: '#/components/schemas/TxnStatusRequest'
                  required:
                    - transaction_id
                    - txnstatus_request
              required:
                - header
                - message
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - issue
                        - search
                        - status
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
  /identity/txn/on-status:
    post:
      summary: 'ID-ON-TXNSTS : /identity/txn/on-status'
      description: Response to async status check of previous identity transanctions using callback
      operationId: post_g2p_id_on-txnstatus
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgCallbackHeader'
                    - properties:
                        action:
                          enum:
                            - on-issue
                            - on-search
                            - on-status
                message:
                  type: object
                  properties:
                    transaction_id:
                      $ref: '#/components/schemas/TransactionId'
                    txnstatus_response:
                      $ref: '#/components/schemas/TxnStatusResponse'
                  required:
                    - transaction_id
                    - txnstatus_response
              required:
                - header
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - on-issue
                        - on-search
                        - on-status
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
components:
  schemas:
    IdentityRecord:
      description: |
        1. Attributes of a person to create fetch records, create verifiable credentials or use in search criteria.
        3. Allowes Country/Registry specific implementation extensions using Attribute Name/Value pairs.
      properties:
        id:
          $ref: '#/components/schemas/PersonId'
        issue_date:
          type: string
          format: date-time
        status:
          description: Identity status
          type: string
        name:
          description: 'End-User''s full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User''s locale and preferences.'
          type: string
        given_name:
          description: 'Given name(s) or first name(s) of the End-User. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.'
          type: string
        family_name:
          description: 'Surname(s) or last name(s) of the End-User. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters.'
          type: string
        middle_name:
          description: 'Middle name(s) of the End-User. Note that in some cultures, people can have multiple middle names; all can be present, with the names being separated by space characters. Also note that in some cultures, middle names are not used.'
          type: string
        email:
          description: 'End-User''s preferred e-mail address. Its value MUST conform to the RFC 5322 [RFC5322] addr-spec syntax. The RP MUST NOT rely upon this value being unique, as discussed in Section 5.7.'
          type: string
        email_verified:
          description: 'address was controlled by the End-User at the time the verification was performed. The means by which an e-mail address is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating.'
          type: boolean
        gender:
          description: End-User's gender. Values defined by this specification are female and male. Other values MAY be used when neither of the defined values are applicable.
          type: string
        birthdate:
          description: 'YYYY format is allowed. Note that depending on the underlying platform''s date related function, providing just year can result in varying month and day, so the implementers need to take this factor into account to correctly process the dates.'
          type: string
        place_of_birth:
          description: End-User's place of birth. The value of this member is a JSON structure containing some or all of the following members
          type: object
        phone_number:
          description: 'number contains an extension, it is RECOMMENDED that the extension be represented using the RFC 3966 [RFC3966] extension syntax, for example, +1 (604) 555-1234;ext=5678.'
          type: string
        phone_number_verified:
          description: 'True if the End-User''s phone number has been verified; otherwise false. When this Claim Value is true, this means that the OP took affirmative steps to ensure that this phone number was controlled by the End-User at the time the verification was performed. The means by which a phone number is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating. When true, the phone_number Claim MUST be in E.164 format and any extensions MUST be represented in RFC 3966 format.'
          type: string
        address:
          $ref: '#/components/schemas/PersonAddress'
        nationalities:
          description: 'End-User''s nationalities using ICAO 3-letter codes [ICAO-Doc9303], e.g., "USA" or "JPN". 2-letter ICAO codes MAY be used in some circumstances for compatibility reasons.'
          type: array
          items:
            type: string
        updated_at:
          description: 'Time the End-User''s information was last updated. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time'
          type: number
        additional_attributes:
          $ref: '#/components/schemas/AttributeNameValue'
    TxnStatusRequest:
      type: object
      description: Request to search identity service requests
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        search_type:
          type: string
          enum:
            - transaction_id
            - reference_id_list
        search_attribute:
          oneOf:
            - $ref: '#/components/schemas/TransactionId'
            - $ref: '#/components/schemas/ReferenceIdList'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - search_type
        - search_attribute
    TxnStatusResponse:
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/VerifyResponse'
      example:
        on-txnstatus-response:
          reference_id: test
          timestamp: test
          status: SUCC
    VerifyRequest:
      type: object
      description: Verify person with identity provider. Match attribtues in request object and return booelan match response along with a token.
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
        id:
          $ref: '#/components/schemas/PersonId'
        consent_obtained:
          type: string
          description: Is consent obtained for verification
          enum:
            - 'y'
            - 'n'
          example: 'y'
        search_criteria:
          type: object
          properties:
            query:
              $ref: '#/components/schemas/IdentityRecord'
            custom_query:
              $ref: '#/components/schemas/ExpressionWithConditionList'
        filter:
          description: Attribute(s) to send in response
          items:
            type: string
        sort:
          $ref: '#/components/schemas/SearchSortList'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - timestamp
        - id
        - consent_obtained
        - search_criteria
    VerifyResponse:
      type: object
      description: 'Digital credential issuance '
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
        status:
          $ref: '#/components/schemas/RequestStatus'
        status_reason_code:
          $ref: '#/components/schemas/VerifyStatusReasonCode'
        status_reason_message:
          description: Status reason code message. Helps actionanble messaging for systems/end users
          type: string
          maxLength: 999
        token:
          $ref: '#/components/schemas/PersonId'
        verify_results:
          $ref: '#/components/schemas/ExpressionResultList'
        pagination:
          $ref: '#/components/schemas/Pagination'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - timestamp
        - status
        - status_reason_code
    VerifyStatusReasonCode:
      type: string
      description: Identity verification request status reason codes
      enum:
        - rjct.reference_id.invalid
        - rjct.reference_id.duplicate
        - rjct.timestamp.invalid
        - 'rjct.{attribute_name}.invalid'
        - 'rjct.{attribute_value}.invalid'
        - 'rjct.{operator}.invalid'
        - id.verify_success
        - id.verify_failed
        - id.cancelled
        - id.suspended
    AttributeNameValue:
      type: object
      description: Attribute name value object
      properties:
        attribute_name:
          type: string
          maxLength: 99
        attribute_value:
          type: string
          maxLength: 999
      required:
        - attribute_name
        - attribute_value
    Error:
      description: |
        Describes an error object that is returned to standard post call request. <br>
        1. This object shall be sent when any request received by a participant is not parsable or message integrity check fails. <br>
        2. This object may be used across all transport protocols to acknowledge the receipt of a message i.e HTTPS, FTP, Messaging etc., <br>"
      type: object
      properties:
        code:
          type: string
          description: Standard error code
          enum:
            - err.request.bad
            - err.request.unauthorized
            - err.request.forbidden
            - err.request.not_found
            - err.request.timeout
            - err.version.not_supported
            - err.request.too_many_requests
            - err.sender_id.invalid
            - err.sender_uri.invalid
            - err.receiver_id.invalid
            - err.signature.missing
            - err.signature.invalid
            - err.encryption.invalid
            - err.service.unavailable
        message:
          type: string
          description: message to describe above error code
          maxLength: 999
    ExpCondition:
      description: Condition in an expression
      type: string
      enum:
        - and
        - or
        - not
      example: and
    ExpOperator:
      description: Operator in an expression
      type: string
      enum:
        - gt
        - lt
        - eq
        - ge
        - le
      example: eq
    Expression:
      description: Expression
      properties:
        seq_num:
          description: expression seq number for correlation
          type: number
          example: 1
        attribute_name:
          type: string
          description: attribute name
        operator:
          $ref: '#/components/schemas/ExpOperator'
        attribute_value:
          oneOf:
            - type: string
            - type: integer
            - type: number
            - type: boolean
      required:
        - seq_num
        - attribute_name
        - operator
        - attribute_value
    ExpressionList:
      description: list of attributes with matching conditions
      items:
        $ref: '#/components/schemas/Expression'
    ExpressionResult:
      description: Expression result
      properties:
        seq_num:
          description: expression seq number for correlation
          type: number
          example: 1
        result:
          type: string
          enum:
            - 'y'
            - 'n'
          example: 'y'
      required:
        - seq_num
        - result
    ExpressionResultList:
      items:
        $ref: '#/components/schemas/ExpressionResult'
    ExpressionWithCondition:
      description: Expression with a condition
      type: object
      properties:
        expression1:
          $ref: '#/components/schemas/Expression'
        condition:
          $ref: '#/components/schemas/ExpCondition'
        expression2:
          $ref: '#/components/schemas/Expression'
      required:
        - expression1
    ExpressionWithConditionList:
      items:
        $ref: '#/components/schemas/ExpressionWithCondition'
    FileInfo:
      type: object
      description: File info. Used in file upload feature using HTTPS
      properties:
        action:
          description: G2P Connect specific actions. Usually verb from the URI should go here to help store and fwd kind of processing requirements.
          type: string
        fileName:
          description: Disbursement instruction file representing Disburse or OnDisburse end point elements i.e signature/header/message entities as a file record
          type: string
          format: binary
        fileFormat:
          description: 'File content format. e.g json, csv, etc.,'
          type: string
          default: json
          example: csv
      required:
        - action
        - fileName
    KeyValueInfo:
      type: object
      description: Key Value info
      properties:
        key:
          type: string
          maxLength: 99
        value:
          type: string
          maxLength: 999
      required:
        - key
        - value
    LanguageCode:
      description: indicates language code. G2P Connect supports country codes as per ISO 639.3 standard
      type: string
      pattern: '^[a-z]{3,3}$'
      example: en
    MsgCallbackHeader:
      type: object
      description: Message header
      properties:
        version:
          description: Messaing protocol specification version being used
          type: string
          example: 0.1.0
        message_id:
          description: Unique message id to communicate between sender and receiver systems. Receiving system should echo the orignial message_id for correlations.
          type: string
          example: '123456789020211216223812'
        message_ts:
          description: Time of message generation in RFC3339 format
          type: string
          format: date-time
          example: '2022-12-04T18:02:35+00:00'
        action:
          description: G2P Connect specific action. Usually verb from the URI should go here to help store and fwd kind of processing requirements.
          type: string
        status:
          $ref: '#/components/schemas/RequestStatus'
        status_reason_code:
          $ref: '#/components/schemas/MsgHeaderStatusReasonCode'
        status_reason_message:
          description: 'Status reascon code message, if any, Helps actionanble messaging for system/end users'
          type: string
          maxLength: 999
        total_count:
          description: Total no of requests present in the message request
          type: integer
          example: 21800
        completed_count:
          description: No of requests in complteed state. Complete includes success and error requests due to funcational errors
          type: integer
          example: 50
        sender_id:
          description: 'send id registered with the receiving system. Used for authorization, encryption, digital sign verfication, etc., functions.'
          type: string
          example: pymts.example.org
        sender_uri:
          description: sender url to accept callbacks
          type: string
          format: uri
          example: ''
        receiver_id:
          description: 'receiver id registered with the calling system. Used for authorization, encryption, digital sign verfication, etc., functions.'
          type: string
          example: registry.example.org
        receiver_uri:
          description: receiver url to accept callbacks
          type: string
          format: uri
          example: ''
        is_encrypted:
          description: Is message encrypted?
          type: boolean
          default: true
      required:
        - message_id
        - message_ts
        - action
        - status
    MsgHeader:
      type: object
      description: Message header
      properties:
        version:
          description: Messaing protocol specification version being used
          type: string
          example: 0.1.0
        message_id:
          description: 'Unique message id to communicate between sender and receiver systems to realiable deliver the message over any transport layer i.e https, pub/sub, sftp etc.,'
          type: string
          example: '123456789020211216223812'
        message_ts:
          description: Time of message generation in RFC3339 format
          type: string
          format: date-time
          example: '2022-12-04T18:01:07+00:00'
        action:
          description: 'G2P Connect specific action. Usually verb from the URI. Helps in sync, async, store/fwd processing. Helps identity payload type in message property.'
          type: string
        sender_id:
          description: 'send id registered with the receiving system. Used for authorization, encryption, digital sign verfication, etc., functions.'
          type: string
          example: registry.example.org
        sender_uri:
          description: sender url to accept callbacks
          type: string
          format: uri
          example: 'https://registry.sender.org/g2p/callback/on-disburse'
        receiver_id:
          description: 'receiver id registered with the calling system. Used for authorization, encryption, digital sign verfication, etc., functions.'
          type: string
          example: pymts.example.org
        total_count:
          description: Total no of requests present in the message request
          type: integer
          example: 21800
        is_encrypted:
          description: Is message encrypted?
          type: boolean
          default: true
      required:
        - message_id
        - message_ts
        - action
    MsgHeaderStatusReasonCode:
      type: string
      description: Message header related common status reason codes
      enum:
        - rjct.version.invalid
        - rjct.message_id.duplicate
        - rjct.message_ts.invalid
        - rjct.action.invalid
        - rjct.action.not_supported
        - rjct.total_count.invalid
        - rjct.total_count.limit_exceeded
        - rjct.errors.too_many
    MsgSignature:
      type: string
      description: 'Signature of {header}+{message} body verified using sender''s signing public key'
      example: 'Signature:  namespace="g2p", kidId="{sender_id}|{unique_key_id}|{algorithm}", algorithm="ed25519", created="1606970629", expires="1607030629", headers="(created) (expires) digest", signature="Base64(signing content)'
    Pagination:
      description: 'Pagination definition, count starts with 1'
      type: object
      properties:
        page_size:
          type: number
          format: int32
          example: 2000
        page_number:
          type: number
          format: int32
          example: 5
        total_count:
          type: number
          format: int32
          example: 24250
      required:
        - page_size
        - page_number
        - total_count
    PaginationRequest:
      description: 'Pagination definition, count starts with 1'
      type: object
      properties:
        page_size:
          type: number
          format: int32
          example: 2000
        page_number:
          type: number
          format: int32
          default: 1
          example: 5
      required:
        - page_size
    PersonAdditionalInfo:
      type: object
      description: 'Person additional info based on OpenID <a href="https://openid.net/specs/openid-connect-4-identity-assurance-1_0-13.html#name-additional-claims-about-end">specs</a>'
      properties:
        place_of_birth:
          description: End-User's place of birth. The value of this member is a JSON structure containing some or all of the following members
          type: object
        nationalities:
          description: 'End-User''s nationalities using ICAO 3-letter codes [ICAO-Doc9303], e.g., "USA" or "JPN". 2-letter ICAO codes MAY be used in some circumstances for compatibility reasons.'
          type: array
          items:
            type: string
        birth_family_name:
          description: 'End-User''s family name(s) when they were born, or at least from the time they were a child. This term can be used by a person who changes the family name later in life for any reason. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters.'
          type: string
        birth_given_name:
          description: 'End-User''s given name(s) when they were born, or at least from the time they were a child. This term can be used by a person who changes the given name later in life for any reason. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.'
          type: string
        birth_middle_name:
          description: 'End-User''s middle name(s) when they were born, or at least from the time they were a child. This term can be used by a person who changes the middle name later in life for any reason. Note that in some cultures, people can have multiple middle names; all can be present, with the names being separated by space characters. Also note that in some cultures, middle names are not used.'
          type: string
        salutation:
          description: 'End-User''s salutation, e.g., "Mr."'
          type: string
        title:
          description: 'End-User''s title, e.g., "Dr."'
          type: string
        msisdn:
          description: 'End-User''s mobile phone number formatted according to ITU-T recommendation [E.164], e.g., "1999550123"'
          type: string
        also_known_as:
          description: 'Stage name, religious name or any other type of alias/pseudonym with which a person is known in a specific context besides its legal name. This must be part of the applicable legislation and thus the trust framework (e.g., be an attribute on the identity card).'
          type: string
    PersonAddress:
      description: 'Person address info as per OpenID <a href="https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim">specs</a>'
      properties:
        formatted:
          description: 'Full mailing address, formatted for display or use on a mailing label. This field MAY contain multiple lines, separated by newlines. Newlines can be represented either as a carriage return/line feed pair ("\r\n") or as a single line feed character ("\n").'
          type: string
        street_address:
          description: 'Full street address component, which MAY include house number, street name, Post Office Box, and multi-line extended street address information. This field MAY contain multiple lines, separated by newlines. Newlines can be represented either as a carriage return/line feed pair ("\r\n") or as a single line feed character ("\n").'
          type: string
        locality:
          description: City or locality component.
          type: string
        region:
          description: 'State, province, prefecture, or region component.'
          type: string
        postal_code:
          description: Zip code or postal code component.
          type: string
        country:
          description: 'state, province, region'
          type: string
        country_code:
          description: 'OPTIONAL. country part of an address represented using an ISO 3-letter code [ISO3166-3], e.g., "USA" or "JPN". 2-letter ISO codes [ISO3166-1] MAY be used for compatibility reasons. country_code MAY be used as alternative to the existing country field.'
          type: string
    PersonId:
      type: string
      description: '<br> 1. Beneficiary id is case insensitve normative represenation as id-type:id@provider <br> 2. This will enumerate foundational and functioanl id''s to easily resolvable addressess <br> 3. This property is intended to unambiguously refer to an object, such as a person, organization, etc., <br> 4. Few examples: <br> - id@identifier-type.id-provider e.g token:12345@mosip, vid:12345@philid <br> - id@civil-registry.issuing-agency e.g id:12345@rwanda, id:12345@ejanma.karnataka <br> - id@functional-identifier.issuing-agency e.g id:12345@voter.Rwanda, id:12345@DL.karnataka, mobile:12345@fruits.karnataka <br> Note: id provider should be made configurable and solutions should adapt to the local jurisdiction and policies.<br> e.g fruits.karnataka represents farmer registry in karnataka state govt.<br>'
      format: '^[a-zA-Z0-9.-]+@[a-zA-Z0-9.-]+$'
      example: 'vid:12345@mosip'
    PersonInfo:
      type: object
      description: 'Person identity info - foundational or functioanl id''s based on OpenID <a href="https://openid.net/specs/openid-connect-core-1_0.html#Claims">specs</a>'
      properties:
        sub:
          description: Subject - Identifier for the End-User at the Issuer.
          type: string
        name:
          description: 'End-User''s full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User''s locale and preferences.'
          type: string
        given_name:
          description: 'Given name(s) or first name(s) of the End-User. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.'
          type: string
        family_name:
          description: 'Surname(s) or last name(s) of the End-User. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters.'
          type: string
        middle_name:
          description: 'Middle name(s) of the End-User. Note that in some cultures, people can have multiple middle names; all can be present, with the names being separated by space characters. Also note that in some cultures, middle names are not used.'
          type: string
        nickname:
          description: 'Casual name of the End-User that may or may not be the same as the given_name. For instance, a nickname value of Mike might be returned alongside a given_name value of Michael.'
          type: string
        preferred_username:
          description: 'Shorthand name by which the End-User wishes to be referred to at the RP, such as janedoe or j.doe. This value MAY be any valid JSON string including special characters such as @, /, or whitespace. The RP MUST NOT rely upon this value being unique, as discussed in'
          type: string
        profile:
          description: URL of the End-User's profile page. The contents of this Web page SHOULD be about the End-User.
          type: string
        picture:
          description: 'URL of the End-User''s profile picture. This URL MUST refer to an image file (for example, a PNG, JPEG, or GIF image file), rather than to a Web page containing an image. Note that this URL SHOULD specifically reference a profile photo of the End-User suitable for displaying when describing the End-User, rather than an arbitrary photo taken by the End-User.'
          type: string
        website:
          description: URL of the End-User's Web page or blog. This Web page SHOULD contain information published by the End-User or an organization that the End-User is affiliated with.
          type: string
        email:
          description: 'End-User''s preferred e-mail address. Its value MUST conform to the RFC 5322 [RFC5322] addr-spec syntax. The RP MUST NOT rely upon this value being unique, as discussed in Section 5.7.'
          type: string
        email_verified:
          description: 'address was controlled by the End-User at the time the verification was performed. The means by which an e-mail address is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating.'
          type: boolean
        gender:
          description: End-User's gender. Values defined by this specification are female and male. Other values MAY be used when neither of the defined values are applicable.
          type: string
        birthdate:
          description: 'YYYY format is allowed. Note that depending on the underlying platform''s date related function, providing just year can result in varying month and day, so the implementers need to take this factor into account to correctly process the dates.'
          type: string
        zoneinfo:
          description: 'String from zoneinfo [zoneinfo] time zone database representing the End-User''s time zone. For example, Europe/Paris or America/Los_Angeles.'
          type: string
        locale:
          description: 'Alpha-2 [ISO3166‑1] country code in uppercase, separated by a dash. For example, en-US or fr-CA. As a compatibility note, some implementations have used an underscore as the separator rather than a dash, for example, en_US; Relying Parties MAY choose to accept this locale syntax as well.'
          type: string
        phone_number:
          description: 'number contains an extension, it is RECOMMENDED that the extension be represented using the RFC 3966 [RFC3966] extension syntax, for example, +1 (604) 555-1234;ext=5678.'
          type: string
        phone_number_verified:
          description: 'True if the End-User''s phone number has been verified; otherwise false. When this Claim Value is true, this means that the OP took affirmative steps to ensure that this phone number was controlled by the End-User at the time the verification was performed. The means by which a phone number is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating. When true, the phone_number Claim MUST be in E.164 format and any extensions MUST be represented in RFC 3966 format.'
          type: string
        address:
          $ref: '#/components/schemas/PersonAddress'
        updated_at:
          description: 'Time the End-User''s information was last updated. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time'
          type: number
    PersonName:
      type: string
      description: 'End-User''s full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User''s locale and preferences.'
      example: Mr. John Smith
    ReferenceId:
      type: string
      description: Unique reference_id set by txn initiating system for each request in a batch
      example: '12345678901234567890'
    ReferenceIdList:
      items:
        $ref: '#/components/schemas/ReferenceId'
    RequestStatus:
      type: string
      description: 'Request (e.g disburse, link, unlink, resolve, issue, search, verify, etc.,) status: <br> 1. rcvd: Received; Request received <br> 2. pdng: Pending; Request initiated <br> 3. succ: Success; Request successful <br> 4. rjct: Rejected; Request rejected'
      enum:
        - rcvd
        - pdng
        - succ
        - rjct
    SearchSort:
      description: Sorting definition
      type: object
      properties:
        attribute_name:
          type: string
          description: attribute name
        sort_order:
          type: string
          enum:
            - asc
            - desc
    SearchSortList:
      items:
        $ref: '#/components/schemas/SearchSort'
    Timestamp:
      type: string
      description: datetime in RFC3339 format
      format: date-time
      example: '2022-12-04T17:20:07-04:00'
    TransactionId:
      description: Unique transaction_id set by txn initiating system (i.e sender) to co-relate requests across processing systems/service end points
      type: string
      maxLength: 99
      example: 012345678901234567890
  parameters:
    accept-language:
      in: header
      name: accept-language
      description: 'Default value: en'
      required: false
      schema:
        type: string
        example: en
    timestamp:
      in: header
      name: timestamp
      description: 'request timestamp in HTTP Date format - Tue, 06 Mar 2020 21:00:00 GMT'
      required: true
      schema:
        type: string
        example: 'Tue, 06 Mar 2020 21:00:00 GMT'
    transaction_id:
      in: path
      name: transaction_id
      description: 'Unique transaction id set by sender as part of the initiating request to co-relate requests across interface end point, sessions, etc., For e.g transaction_id be used to find status using GET call or correlate the transaction as part of the callback call.'
      required: true
      schema:
        type: string
        maxLength: 99
        example: 012345678901234567890
    summary_only:
      in: path
      name: summary_only
      description: 'Optional. Defualt is false, If summary_only set to true then only the message header with stats / status to be returend as part of implementation'
      required: true
      schema:
        type: boolean
        default: true
    beneficiary_id:
      in: path
      name: beneficiary_id
      required: true
      description: '<br> 1. Beneficiary id is a normative represenation represented as id@id-provider <br> 2. This will enumerate foundational and functioanl id''s to easily resolvable addressess <br> 3. Few examples: <br> - id@id-provider e.g 12345@mosip, 12345@PhilID <br> - id@civil-registry.issuing-agency e.g 12345@crvs.rwanda, 12345@ejanma.karnataka - id@functional-identifier.issuing-agency e.g 12345@voter.Rwanda, 12345@DL.karnataka, 12345@fruits.karnataka <br> Note: id-provider should be made configurable and DPGs operating should adapt to the local jurisdiction and policies. e.g fruits.karnataka represents farmer registry in karnataka state govt.<br>'
      schema:
        type: string
        format: '^[a-zA-Z0-9.-]+@[a-zA-Z0-9.-]+$'
        example: 12345@mosip
  responses:
    HttpErrorResponse:
      description: HTTP layer error details
      content:
        application/json:
          schema:
            type: object
            description: 'HTTP transport layer error codes. Used by components like gateways, LB responding with HTTP status codes 1xx, 2xx, 3xx, 4xx and 5xx'
            properties:
              error:
                type: object
                properties:
                  code:
                    type: string
                    description: error code
                  message:
                    type: string
                    description: error message
    Response:
      description: Acknowledgement of message received after successful validation of message and signature
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: object
                properties:
                  ack_status:
                    type: string
                    description: |
                      1. ACK: If the request is valid (for basic checks) and async callback (i.e webhook) will be invoked by reciever back to the sender.
                      2. NACK: If the request is valid (for basic checks) and there is no futher updates from reciever back to the sender.
                      3. ERR: If the reuqest is invalid and reciver can't process the request. error object holds error code, message.
                    enum:
                      - ACK
                      - NACK
                      - ERR
                  timestamp:
                    $ref: '#/components/schemas/Timestamp'
                  error:
                    $ref: '#/components/schemas/Error'
  securitySchemes:
    x-access-token:
      type: http
      scheme: bearer
      bearerFormat: jwt
      description: Authenticating using sessiong token issued by platfrom/system api gateway or auth services issuing session token apis using client id & secret
