openapi: 3.0.0
info:
  title: Interoperability APIs - Financial Address Mapper Mgmt
  description: |
    Manage finanacial address mapper 
  version: 1.0.0
  contact:
    name: G2P Connect
    email: info@g2pconnect.global
  license:
    name: G2P Connect License
    url: 'https://github.com/G2P-Connect/specs/blob/main/LICENSE'
servers:
  - url: 'https://sandbox.dpg.org/namespace/v1.0.0'
    description: Sandbox Server
tags:
  - name: Async
    description: Async endpoints
  - name: Sync
    description: Sync endpoints
  - name: Schemas
    description: Schemas
paths:
  /mapper/subscribe:
    post:
      summary: /mapper/subscribe
      description: Subscribe to  ID to Financial Address in the mapper registry
      operationId: post_mapper_subscribe
      tags:
        - Async
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgHeader_V1.0.0'
                    - properties:
                        action:
                          enum:
                            - link
                            - update
                            - unlink
                            - resolve
                message:
                  type: object
                  description: The search data using which registry search to be performed
                  oneOf:
                    - $ref: '#/components/schemas/LinkRequest'
                    - $ref: '#/components/schemas/UpdateRequest'
                    - $ref: '#/components/schemas/UnlinkRequest'
                    - $ref: '#/components/schemas/ResolveRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
                - message
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - link
                        - update
                        - unlink
                        - resolve
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
  /mapper/notify:
    post:
      summary: /mapper/on-link
      description: Linking response throuhg callback
      operationId: post_mapper_on-link
      tags:
        - Async
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgCallbackHeader_V1.0.0'
                    - properties:
                        action:
                          enum:
                            - on-link
                            - on-update
                            - on-unlink
                            - on-resolve
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/LinkResponse'
                    - $ref: '#/components/schemas/UpdateResponse'
                    - $ref: '#/components/schemas/UnlinkResponse'
                    - $ref: '#/components/schemas/ResolveResponse'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - on-link
                        - on-update
                        - on-unlink
                        - on-resolve
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
  /mapper/txn/status:
    post:
      summary: /mapper/txn/status
      description: |
        Perform async status check of previous mapper transanctions using transaction_id and/or reference_id(s)
      operationId: post_mapper_txnstatus
      tags:
        - Async
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgHeader_V1.0.0'
                    - properties:
                        action:
                          enum:
                            - link
                            - update
                            - resolve
                            - unlink
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/TxnStatusRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
                - message
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - link
                        - update
                        - resolve
                        - unlink
                        - search
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
  /mapper/txn/on-status:
    post:
      summary: /mapper/txn/on-status
      description: Response to async status check of previous mapper transanctions using callback
      operationId: post_mapper_on-txnstatus
      tags:
        - Async
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgCallbackHeader_V1.0.0'
                    - properties:
                        action:
                          enum:
                            - on-link
                            - on-update
                            - on-resolve
                            - on-unlink
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/TxnStatusResponse'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - on-link
                        - on-update
                        - on-resolve
                        - on-unlink
                        - on-search
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
  /mapper/sync/link:
    post:
      summary: /mapper/sync/link
      description: Linking ID to Financial Address in the mapper registry
      operationId: post_reg_sync_link
      tags:
        - Sync
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgHeader_V1.0.0'
                    - properties:
                        action:
                          enum:
                            - link
                message:
                  type: object
                  description: The link data to map id to fa
                  anyOf:
                    - $ref: '#/components/schemas/LinkRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
                - message
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          description: Linking response throuhg callback
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature:
                    $ref: '#/components/schemas/MsgSignature'
                  header:
                    allOf:
                      - $ref: '#/components/schemas/MsgCallbackHeader_V1.0.0'
                      - properties:
                          action:
                            enum:
                              - on-search
                  message:
                    type: object
                    oneOf:
                      - $ref: '#/components/schemas/LinkResponse'
                      - $ref: '#/components/schemas/EncryptedMessage'
                required:
                  - header
      security:
        - x-access-token: []
      deprecated: false
  /mapper/sync/update:
    post:
      summary: /mapper/sync/update
      description: Update ID or Financial Address in the mapper registry
      operationId: post_reg_sync_update
      tags:
        - Sync
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgHeader_V1.0.0'
                    - properties:
                        action:
                          enum:
                            - link
                message:
                  type: object
                  description: The link data to map id to fa
                  anyOf:
                    - $ref: '#/components/schemas/UpdateRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
                - message
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          description: Linking response throuhg callback
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature:
                    $ref: '#/components/schemas/MsgSignature'
                  header:
                    allOf:
                      - $ref: '#/components/schemas/MsgCallbackHeader_V1.0.0'
                      - properties:
                          action:
                            enum:
                              - on-search
                  message:
                    type: object
                    oneOf:
                      - $ref: '#/components/schemas/UpdateResponse'
                      - $ref: '#/components/schemas/EncryptedMessage'
                required:
                  - header
      security:
        - x-access-token: []
      deprecated: false
  /mapper/sync/unlink:
    post:
      summary: /mapper/sync/unlink
      description: Unlink ID to Financial Address in the mapper registry
      operationId: post_reg_sync_unlink
      tags:
        - Sync
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgHeader_V1.0.0'
                    - properties:
                        action:
                          enum:
                            - link
                message:
                  type: object
                  description: Request message to unlink id from fa
                  anyOf:
                    - $ref: '#/components/schemas/UnlinkRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
                - message
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          description: Unlink response throuhg callback
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature:
                    $ref: '#/components/schemas/MsgSignature'
                  header:
                    allOf:
                      - $ref: '#/components/schemas/MsgCallbackHeader_V1.0.0'
                      - properties:
                          action:
                            enum:
                              - on-search
                  message:
                    type: object
                    oneOf:
                      - $ref: '#/components/schemas/UnlinkResponse'
                      - $ref: '#/components/schemas/EncryptedMessage'
                required:
                  - header
      security:
        - x-access-token: []
      deprecated: false
  /mapper/sync/resolve:
    post:
      summary: /mapper/sync/resolve
      description: Resolve ID to a Financial Address in the mapper registry
      operationId: post_reg_sync_resolve
      tags:
        - Sync
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgHeader_V1.0.0'
                    - properties:
                        action:
                          enum:
                            - link
                message:
                  type: object
                  description: Request message to resolve id to a fa
                  anyOf:
                    - $ref: '#/components/schemas/ResolveRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
                - message
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          description: Resolve response through callback
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature:
                    $ref: '#/components/schemas/MsgSignature'
                  header:
                    allOf:
                      - $ref: '#/components/schemas/MsgCallbackHeader_V1.0.0'
                      - properties:
                          action:
                            enum:
                              - on-search
                  message:
                    type: object
                    oneOf:
                      - $ref: '#/components/schemas/ResolveResponse'
                      - $ref: '#/components/schemas/EncryptedMessage'
                required:
                  - header
      security:
        - x-access-token: []
      deprecated: false
  /registry/sync/txn/status:
    post:
      summary: /registry/sync/txn/status
      description: Perform sync status check of previous civil registry transanctions using transaction_id and/or reference_id(s)
      operationId: post_reg_sync_txnstatus
      tags:
        - Sync
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgHeader_V1.0.0'
                    - properties:
                        action:
                          enum:
                            - link
                            - update
                            - resolve
                            - unlink
                            - search
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/TxnStatusRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
                - message
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          description: Transaction status check response
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature:
                    $ref: '#/components/schemas/MsgSignature'
                  header:
                    allOf:
                      - $ref: '#/components/schemas/MsgCallbackHeader_V1.0.0'
                      - properties:
                          action:
                            enum:
                              - on-link
                              - on-update
                              - on-resolve
                              - on-unlink
                              - on-search
                  message:
                    type: object
                    oneOf:
                      - $ref: '#/components/schemas/TxnStatusResponse'
                      - $ref: '#/components/schemas/EncryptedMessage'
                required:
                  - header
      security:
        - x-access-token: []
      deprecated: false
components:
  schemas:
    cdpi_PersonId:
      type: string
      description: |
        1. Person id is case insensitve normative represenation as id-type:id@provider <br>
        2. This will enumerate foundational and functioanl id's to easily resolvable addressess <br>
        3. This property is intended to unambiguously refer to an object, such as a person, beneficiary, user, etc., <br>
        4. Few examples: <br>
            - id@identifier-type.id-provider e.g token:12345@mosip, vid:543215@mosip <br>
            - id@civil-registry.issuing-agency e.g id:12345@crvs, brn:12345@crvs, mrn:12345@crvs <br>
            - id@functional-identifier.issuing-agency e.g id:12345@voter-id, id:12345@driving-license, mobile:12345@farmer-reg <br>
        Note: id provider should be made configurable and solutions should adapt to the local jurisdiction and policies.
      format: '^[a-zA-Z0-9.-]+@[a-zA-Z0-9.-]+$'
      example: 'vid:54321@mosip'
    cdpi_FinancialAddress:
      type: string
      description: |
        1. Financial address is case insensitive normative represenation of a store of value account represented as id-type:id@provider
        2. Every payer/payee financial address must resolve to an actual store of value account number for processing the payment instruction
        3. It is recommended the mapping between id and store of value account details to be held only at final store of value entity and intermediaries can hold 
        3. Few examples: <br>
            - token@id-provider e.g token:12345@national-id <br>
            - uid@pymt-rail e.g uid:12345@national-id <br>
            - vid@id-provider e.g vid:12345@national-id <br>
            - mobile@mobile-provider e.g mobile:12345@mobile-pymt <br>
            - account-id@bank-psp-code e.g account:12345@national-bank <br>
            - account-no@ifsc-code.ifsc.pymt-rail e.g account:12345@abcd0000001.ifsc.pymt-rail <br>
            - user-id@psp-code e.g. joeuser@national-bank <br>
            - token@psp-code e.g token:123456@a123 <br>
            - code@purpose-code.voucher-provider e.g voucher:12345@food.coupon-network <br>
      format: '^[a-zA-Z0-9.-]+@[a-zA-Z0-9.-]+$'
      example: 'token:12345@gtbank'
    cdpi_FinancialAddressList:
      items:
        $ref: '#/components/schemas/cdpi_FinancialAddress'
    GooglePlusCode:
      type: object
      description: 'Refer [Plus Codes](https://github.com/google/open-location-code/wiki/Plus-codes-API) for more details'
      properties:
        global_code:
          type: string
          example: ''
        geometry:
          type: object
          properties:
            bounds:
              type: object
              properties:
                northeast:
                  $ref: '#/components/schemas/LatLong'
                southwest:
                  $ref: '#/components/schemas/LatLong'
            location:
              $ref: '#/components/schemas/LatLong'
    openid_Address:
      title: Address
      description: 'Address info as per OpenID <a href="https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim">specs</a>'
      properties:
        address_line1:
          description: 'Full mailing address, formatted for display or use on a mailing label. This field MAY contain multiple lines, separated by newlines. Newlines can be represented either as a carriage return/line feed pair ("\r\n") or as a single line feed character ("\n").'
          type: string
          example: ''
        address_line_2:
          description: 'Full street address component, which MAY include house number, street name, Post Office Box, and multi-line extended street address information. This field MAY contain multiple lines, separated by newlines. Newlines can be represented either as a carriage return/line feed pair ("\r\n") or as a single line feed character ("\n").'
          type: string
          example: ''
        locality:
          description: City or locality component.
          type: string
          example: ''
        sub_region_code:
          description: District or sub-regional code
          type: string
        region_code:
          description: 'State, province, prefecture, or region component.'
          type: string
          example: ''
        postal_code:
          description: Zip code or postal code component.
          type: string
          example: ''
        country_code:
          description: 'Country part of an address represented using an ISO 3-letter code [ISO3166-3], e.g., "USA" or "JPN". 2-letter ISO codes [ISO3166-1] e.g. ,e.g. US, JP'
          type: string
          example: ''
        geo_location:
          description: |
            Refer [Plus Codes](https://github.com/google/open-location-code/wiki/Plus-codes-API) for more details
          oneOf:
            - $ref: '#/components/schemas/LatLong'
            - $ref: '#/components/schemas/GooglePlusCode'
    openid_PersonRecord:
      description: |
        1. Attributes of a person to create fetch records, create verifiable credentials or use in search criteria.
        2. Allowes Country/Registry specific implementation extensions using Attribute Name/Value pairs.
        3. Person info as per OpenID [Claims](https://openid.net/specs/openid-connect-core-1_0.html#Claims)
        4. Person additional info based on OpenID [name-additional-claims](https://openid.net/specs/openid-connect-4-identity-assurance-1_0-13.html#name-additional-claims-about-end)
      properties:
        sub:
          type: string
          description: Subject - Identifier for the End-User at the Issuer.
        name:
          description: 'End-User''s full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User''s locale and preferences.'
          type: string
        given_name:
          description: 'Given name(s) or first name(s) of the End-User. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.'
          type: string
        family_name:
          description: 'Surname(s) or last name(s) of the End-User. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters.'
          type: string
        middle_name:
          description: 'Middle name(s) of the End-User. Note that in some cultures, people can have multiple middle names; all can be present, with the names being separated by space characters. Also note that in some cultures, middle names are not used.'
          type: string
        nickname:
          description: 'Casual name of the End-User that may or may not be the same as the given_name. For instance, a nickname value of Mike might be returned alongside a given_name value of Michael.'
          type: string
        preferred_username:
          description: 'Shorthand name by which the End-User wishes to be referred to at the RP, such as janedoe or j.doe. This value MAY be any valid JSON string including special characters such as @, /, or whitespace. The RP MUST NOT rely upon this value being unique, as discussed in'
          type: string
        profile:
          description: URL of the End-User's profile page. The contents of this Web page SHOULD be about the End-User.
          type: string
        picture:
          description: 'URL of the End-User''s profile picture. This URL MUST refer to an image file (for example, a PNG, JPEG, or GIF image file), rather than to a Web page containing an image. Note that this URL SHOULD specifically reference a profile photo of the End-User suitable for displaying when describing the End-User, rather than an arbitrary photo taken by the End-User.'
          type: string
        website:
          description: URL of the End-User's Web page or blog. This Web page SHOULD contain information published by the End-User or an organization that the End-User is affiliated with.
          type: string
        email:
          description: 'End-User''s preferred e-mail address. Its value MUST conform to the RFC 5322 [RFC5322] addr-spec syntax. The RP MUST NOT rely upon this value being unique, as discussed in Section 5.7.'
          type: string
        email_verified:
          description: 'address was controlled by the End-User at the time the verification was performed. The means by which an e-mail address is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating.'
          type: boolean
        gender:
          description: End-User's gender. Values defined by this specification are female and male. Other values MAY be used when neither of the defined values are applicable.
          type: string
        birthdate:
          description: 'YYYY format is allowed. Note that depending on the underlying platform''s date related function, providing just year can result in varying month and day, so the implementers need to take this factor into account to correctly process the dates.'
          type: string
        place_of_birth:
          description: End-User's place of birth. The value of this member is a JSON structure containing some or all of the following members
          type: object
        deathdate:
          description: 'YYYY format is allowed. Note that depending on the underlying platform''s date related function, providing just year can result in varying month and day, so the implementers need to take this factor into account to correctly process the dates.'
          type: string
        place_of_death:
          description: End-User's place of birth. The value of this member is a JSON structure containing some or all of the following members
          type: object
        phone_number:
          description: 'number contains an extension, it is RECOMMENDED that the extension be represented using the RFC 3966 [RFC3966] extension syntax, for example, +1 (604) 555-1234;ext=5678.'
          type: string
        phone_number_verified:
          description: 'True if the End-User''s phone number has been verified; otherwise false. When this Claim Value is true, this means that the OP took affirmative steps to ensure that this phone number was controlled by the End-User at the time the verification was performed. The means by which a phone number is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating. When true, the phone_number Claim MUST be in E.164 format and any extensions MUST be represented in RFC 3966 format.'
          type: string
        address:
          $ref: '#/components/schemas/openid_Address'
        zoneinfo:
          description: 'String from zoneinfo [zoneinfo] time zone database representing the End-User''s time zone. For example, Europe/Paris or America/Los_Angeles.'
          type: string
        locale:
          description: 'Alpha-2 [ISO3166‑1] country code in uppercase, separated by a dash. For example, en-US or fr-CA. As a compatibility note, some implementations have used an underscore as the separator rather than a dash, for example, en_US; Relying Parties MAY choose to accept this locale syntax as well.'
          type: string
        nationalities:
          description: 'End-User''s nationalities using ICAO 3-letter codes [ICAO-Doc9303], e.g., "USA" or "JPN". 2-letter ICAO codes MAY be used in some circumstances for compatibility reasons.'
          type: array
          items:
            type: string
        updated_at:
          description: 'Time the End-User''s information was last updated. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time'
          type: number
        birth_family_name:
          description: 'End-User''s family name(s) when they were born, or at least from the time they were a child. This term can be used by a person who changes the family name later in life for any reason. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters.'
          type: string
        birth_given_name:
          description: 'End-User''s given name(s) when they were born, or at least from the time they were a child. This term can be used by a person who changes the given name later in life for any reason. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.'
          type: string
        birth_middle_name:
          description: 'End-User''s middle name(s) when they were born, or at least from the time they were a child. This term can be used by a person who changes the middle name later in life for any reason. Note that in some cultures, people can have multiple middle names; all can be present, with the names being separated by space characters. Also note that in some cultures, middle names are not used.'
          type: string
        salutation:
          description: 'End-User''s salutation, e.g., "Mr."'
          type: string
        title:
          description: 'End-User''s title, e.g., "Dr."'
          type: string
        msisdn:
          description: 'End-User''s mobile phone number formatted according to ITU-T recommendation [E.164], e.g., "1999550123"'
          type: string
        also_known_as:
          description: 'Stage name, religious name or any other type of alias/pseudonym with which a person is known in a specific context besides its legal name. This must be part of the applicable legislation and thus the trust framework (e.g., be an attribute on the identity card).'
          type: string
        additional_attributes:
          $ref: '#/components/schemas/AttributeNameValueList'
    openid_PersonDocDetails:
      type: object
      description: |
        1. Person document detials as per OpenID [identity-assurance](https://openid.net/specs/openid-connect-4-identity-assurance-1_0-13.html#name-evidence-element)
        2. JSON object representing the document used to perform the identity verification. 
      properties:
        type:
          description: 'String denoting the type of the document. The OP MAY use other than the predefined values in which case the RPs will either be unable to process the assertion, just store this value for audit purposes, or apply bespoken business logic to it.'
          type: string
        document_number:
          description: 'String Representing an identifier/number that uniquely identifies a document that was issued to the End-User. This is used on one document and will change if it is reissued, e.g., a passport number, certificate number, etc. Note, number can be used as an alias for ''document_number'' for backward compatibility purposes but will be deprecated in future releases, implementers are recommended to use document_number.'
          type: string
        personal_number:
          description: 'String representing an identifier that is assigned to the End-User and is not limited to being used in one document, for example a national identification number, personal identity number, citizen number, social security number, driver number, account number, customer number, licensee number, etc.'
          type: string
        serial_number:
          description: String representing an identifier/number that identifies the document irrespective of any personalization information (this usually only applies to physical artifacts and is present before personalization).
          type: string
        date_of_issuance:
          description: 'The date the document was issued as ISO 8601 [ISO8601] YYYY-MM-DD format.'
          type: string
        date_of_expiry:
          description: 'The date the document will expire as ISO 8601 [ISO8601] YYYY-MM-DD format.'
          type: string
        issuer:
          description: JSON object containing information about the issuer of this document. This object consists of the following properties
          type: object
          properties:
            name:
              description: Designation of the issuer of the document
              type: string
            address:
              $ref: '#/components/schemas/openid_Address'
            country_code:
              description: 'String denoting the country or supranational organization that issued the document as ISO 3166/ICAO 3-letter codes [ICAO-Doc9303], e.g., "USA" or "JPN". 2-letter ICAO codes MAY be used in some circumstances for compatibility reasons.'
              type: string
            jurisdiction:
              description: String containing the name of the region(s)/state(s)/province(s)/municipality(ies) that issuer has jurisdiction over (if this information is not common knowledge or derivable from the address).
              type: string
      required:
        - type
    fa_AccountProviderInfo:
      type: object
      description: Store of value account provider info
      properties:
        name:
          type: string
          description: 'entity name like bank name, prepaid card/voucher issuing system, etc.,'
          example: National Bank of a Country
        code:
          type: string
          description: 'code to identify the entity like bank, prepaid card/voucher issuing system, etc.,'
          example: BANKXXX
        subcode:
          type: string
          description: 'sub code like entity''s branch code, etc.,'
        additional_info:
          description: 'Additional info, if any'
          type: string
          maxLength: 999
      required:
        - name
        - code
    LinkRequest:
      type: object
      description: ID to Store of value account linking request
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        timestamp:
          $ref: '#/components/schemas/DateTime'
        id:
          $ref: '#/components/schemas/cdpi_PersonId'
        fa:
          $ref: '#/components/schemas/cdpi_FinancialAddress'
        name:
          description: 'End-User''s full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User''s locale and preferences.'
          type: string
        phone_number:
          description: 'number contains an extension, it is RECOMMENDED that the extension be represented using the RFC 3966 [RFC3966] extension syntax, for example, +1 (604) 555-1234;ext=5678.'
          type: string
        additional_info:
          $ref: '#/components/schemas/AttributeNameValueList'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - timestamp
        - id
        - fa
    LinkResponse:
      type: object
      description: Beneficiary ID to Store of value account linking response
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        timestamp:
          $ref: '#/components/schemas/DateTime'
        fa:
          $ref: '#/components/schemas/cdpi_FinancialAddress'
        status:
          $ref: '#/components/schemas/RequestStatus'
        status_reason_code:
          $ref: '#/components/schemas/LinkStatusReasonCode'
        status_reason_message:
          description: Status reascon code message. Helps actionanble messaging for systems/end users
          type: string
          maxLength: 999
        additional_info:
          $ref: '#/components/schemas/AttributeNameValueList'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - timestamp
        - status
    LinkStatusReasonCode:
      type: string
      description: FA Mapper Link status reason codes
      enum:
        - rjct.reference_id.invalid
        - rjct.reference_id.duplicate
        - rjct.timestamp.invalid
        - rjct.id.invalid
        - rjct.fa.invalid
        - rjct.name.invalid
        - rjct.mobile_number.invalid
        - rjct.unknown.retry
        - rjct.other.error
    ResolveRequest:
      type: object
      description: |
        1. If id is null then only verify and resolve fa is linked to store of value account. Verification is done by entity issuing fa.
        2. If id is not null then verify and resolve fa is linked store of value account. Additionally verify fa and id are issued to the same individual. If both conditions pass then resolve status can be set to yes.
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        timestamp:
          $ref: '#/components/schemas/DateTime'
        fa:
          $ref: '#/components/schemas/cdpi_FinancialAddress'
        id:
          $ref: '#/components/schemas/cdpi_PersonId'
        name:
          description: 'End-User''s full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User''s locale and preferences.'
          type: string
        scope:
          description: Resolve scope to return only yes_no or account provider or id details. Additional authorization based on caller to be enforced by the implementing system to return any sensitive data.
          type: string
          enum:
            - yes_no
            - details
          default: yes_no
        additional_info:
          $ref: '#/components/schemas/AttributeNameValueList'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - timestamp
        - fa
    ResolveResponse:
      type: object
      description: Resolve financial address to store of value account info response
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        timestamp:
          $ref: '#/components/schemas/DateTime'
        fa:
          $ref: '#/components/schemas/cdpi_FinancialAddress'
        id:
          $ref: '#/components/schemas/cdpi_PersonId'
        account_provider_info:
          $ref: '#/components/schemas/fa_AccountProviderInfo'
        status:
          $ref: '#/components/schemas/RequestStatus'
        status_reason_code:
          $ref: '#/components/schemas/ResolveStatusReasonCode'
        status_reason_message:
          description: Status reascon code message. Helps actionanble messaging for systems/end users
          type: string
          maxLength: 999
        additional_info:
          $ref: '#/components/schemas/AttributeNameValueList'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - timestamp
        - status
    ResolveStatusReasonCode:
      type: string
      description: FA Mapper Resolve status reason codes
      enum:
        - rjct.reference_id.invalid
        - rjct.reference_id.duplicate
        - rjct.timestamp.invalid
        - rjct.id.invalid
        - rjct.fa.invalid
        - rjct.resolve_type.not_supported
        - succ.fa.active
        - succ.fa.inactive
        - succ.fa.not_found
        - succ.fa.not_linked_to_id
        - succ.id.active
        - succ.id.inactive
        - succ.id.not_found
    TxnStatusRequest:
      type: object
      description: Request to search disbursement using payer or payee fa
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        request_type:
          type: string
          enum:
            - link
            - unlink
            - update
            - resolve
        search_type:
          type: string
          enum:
            - transaction_id
            - reference_id_list
        search_attribute:
          oneOf:
            - $ref: '#/components/schemas/TransactionId'
            - $ref: '#/components/schemas/ReferenceIdList'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - search_type
        - search_attribute
    TxnStatusResponse:
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/LinkResponse'
          - $ref: '#/components/schemas/ResolveResponse'
          - $ref: '#/components/schemas/UpdateResponse'
          - $ref: '#/components/schemas/UnlinkResponse'
      example:
        status-response:
          reference_id: test
          timestamp: test
          fa: test
          status: SUCC
    UnlinkRequest:
      type: object
      description: ID to Store of value account unlinking request. Unlink request removes entry against requested id/fa pair.
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        timestamp:
          $ref: '#/components/schemas/DateTime'
        id:
          $ref: '#/components/schemas/cdpi_PersonId'
        fa:
          $ref: '#/components/schemas/cdpi_FinancialAddress'
        additional_info:
          $ref: '#/components/schemas/AttributeNameValueList'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - timestamp
        - id
    UnlinkResponse:
      type: string
      description: FA Mapper Unlink status reason codes
      enum:
        - rjct.reference_id.invalid
        - rjct.reference_id.duplicate
        - rjct.timestamp.invalid
        - rjct.beneficiary_name.invalid
    UnlinkStatusReasonCode:
      type: string
      description: FA Mapper Unlink status reason codes
      enum:
        - rjct.reference_id.invalid
        - rjct.reference_id.duplicate
        - rjct.timestamp.invalid
        - rjct.beneficiary_name.invalid
    UpdateRequest:
      type: object
      description: ID to Store of value account update request. ID can only unlinked.
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        timestamp:
          $ref: '#/components/schemas/DateTime'
        id:
          $ref: '#/components/schemas/cdpi_PersonId'
        fa:
          $ref: '#/components/schemas/cdpi_FinancialAddress'
        name:
          description: 'End-User''s full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User''s locale and preferences.'
          type: string
        phone_number:
          description: 'number contains an extension, it is RECOMMENDED that the extension be represented using the RFC 3966 [RFC3966] extension syntax, for example, +1 (604) 555-1234;ext=5678.'
          type: string
        additional_info:
          $ref: '#/components/schemas/AttributeNameValueList'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - timestamp
        - id
        - fa
    UpdateResponse:
      type: object
      description: ID to Store of value account update response
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        timestamp:
          $ref: '#/components/schemas/DateTime'
        id:
          $ref: '#/components/schemas/cdpi_PersonId'
        status:
          $ref: '#/components/schemas/RequestStatus'
        status_reason_code:
          $ref: '#/components/schemas/UpdateStatusReasonCode'
        status_reason_message:
          description: 'Status reascon code message, if any, Helps actionanble messaging for systems/end users'
          type: string
          maxLength: 999
        additional_info:
          $ref: '#/components/schemas/AttributeNameValueList'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - timestamp
        - fa
        - status
    UpdateStatusReasonCode:
      type: string
      description: FA Mapper Update status reason codes
      enum:
        - rjct.reference_id.invalid
        - rjct.reference_id.duplicate
        - rjct.timestamp.invalid
        - rjct.beneficiary_name.invalid
    Ack:
      type: string
      description: |
        1. ACK: If the request is valid (for basic checks) and async callback (i.e webhook) will be invoked by reciever back to the sender.
        2. NACK: If the request is valid (for basic checks) and there is no futher updates from reciever back to the sender.
        3. ERR: If the reuqest is invalid and reciver can't process the request. error object holds error code, message.
      enum:
        - ACK
        - NACK
        - ERR
    AdditionalInfo:
      type: object
      description: Additional JSON property oject to hold custom user defined contextual data
    AttributeNameValue:
      type: object
      description: Attribute name value object
      properties:
        name:
          type: string
          maxLength: 99
          example: phone_number
        value:
          $ref: '#/components/schemas/AttributeValue'
      required:
        - name
        - value
    AttributeNameValueList:
      type: array
      description: List of attribute Name/Value
      items:
        $ref: '#/components/schemas/AttributeNameValue'
    AttributeValue:
      oneOf:
        - type: string
        - type: integer
        - type: number
        - type: boolean
        - format: data-time
      example: +91 9876543210
    Consent:
      type: object
      description: Consent artefact. TODO - enrich consent object!
      properties:
        id:
          type: string
          format: uri or did
          description: consent id
        ts:
          $ref: '#/components/schemas/DateTime'
        purpose:
          type: object
          properties:
            text:
              type: string
            code:
              type: string
              description: 'From a fixed set, documented at refUri'
            refUri:
              type: string
              format: uri
              description: Uri to provide more info on consent codes
    DateTime:
      description: |
        1. All dates and timestamps are represented in [ISO 8601](https://www.iso.org/standard/40874.html) format including timezone - e.g 2022-12-04T17:20:07-04:00.
      type: string
      format: date-time
      example: ''
    EncryptedMessage:
      description: Encrypted payload
      type: object
      properties:
        header:
          type: object
          properties:
            alg:
              type: string
              description: The JWE algorithm used for encryption
            enc:
              type: string
              description: The encryption algorithm used for encrypting the plaintext
            kid:
              type: string
              description: The key identifier for the encryption key
          required:
            - alg
            - enc
            - kid
        data:
          type: string
          description: This is the result of encrypting the plaintext using the CEK and the IV. It's Base64Url-encoded.
        encrypted_key:
          type: string
          description: The base64-url encoded encrypted key
        auth_tag:
          type: string
          description: 'This is a Base64Url-encoded value that provides evidence of the integrity and authenticity of the ciphertext, Initialization Vector, and Additional Authenticated Data'
        iv:
          type: string
          description: This is a Base64Url-encoded random bit string to be used as the Initialization Vector (IV) when encrypting the plaintext to produce the ciphertext. The size of the IV depends on the encryption algorithm used.
      required:
        - header
        - data
        - encrypted_key
        - auth_tag
        - iv
    Error:
      description: |
        Describes an error object that is returned to standard post call request. <br>
        1. This object shall be sent when any request received by a participant is not parsable or message integrity check fails. <br>
        2. This object may be used across all transport protocols to acknowledge the receipt of a message i.e HTTPS, FTP, Messaging etc., <br>"
      type: object
      properties:
        code:
          type: string
          description: Standard error code
          enum:
            - err.request.bad
            - err.request.unauthorized
            - err.request.forbidden
            - err.request.not_found
            - err.request.timeout
            - err.version.not_supported
            - err.request.too_many_requests
            - err.sender_id.invalid
            - err.sender_uri.invalid
            - err.receiver_id.invalid
            - err.signature.missing
            - err.signature.invalid
            - err.encryption.invalid
            - err.service.unavailable
        message:
          type: string
          description: message to describe above error code
          maxLength: 999
    ExpCondition:
      description: Condition in an expression
      type: string
      enum:
        - and
        - or
        - not
      example: and
    ExpOperator:
      description: Operator in an expression
      type: string
      enum:
        - gt
        - lt
        - eq
        - ge
        - le
      example: eq
    Expression:
      description: Expression
      properties:
        seq_num:
          description: expression seq number for correlation
          type: number
          example: 1
        attribute_name:
          type: string
          description: attribute name
        operator:
          $ref: '#/components/schemas/ExpOperator'
        attribute_value:
          $ref: '#/components/schemas/AttributeValue'
      required:
        - seq_num
        - attribute_name
        - operator
        - attribute_value
    ExpressionList:
      description: list of attributes with matching conditions
      items:
        $ref: '#/components/schemas/Expression'
    ExpressionResult:
      description: Expression result
      properties:
        seq_num:
          description: expression seq number for correlation
          type: number
          example: 1
        result:
          type: string
          enum:
            - 'y'
            - 'n'
          example: 'y'
      required:
        - seq_num
        - result
    ExpressionResultList:
      items:
        $ref: '#/components/schemas/ExpressionResult'
    ExpressionWithCondition:
      type: object
      properties:
        expression1:
          $ref: '#/components/schemas/Expression'
        condition:
          $ref: '#/components/schemas/ExpCondition'
        expression2:
          $ref: '#/components/schemas/Expression'
      required:
        - expression1
    ExpressionWithConditionList:
      items:
        $ref: '#/components/schemas/ExpressionWithCondition'
    FileInfo:
      type: object
      description: File info. Used in file upload feature using HTTPS
      properties:
        action:
          description: G2P Connect specific actions. Usually verb from the URI should go here to help store and fwd kind of processing requirements.
          type: string
        fileName:
          description: Disbursement instruction file representing Disburse or OnDisburse end point elements i.e signature/header/message entities as a file record
          type: string
          format: binary
        fileFormat:
          description: 'File content format. e.g json, csv, etc.,'
          type: string
          default: json
          example: csv
      required:
        - action
        - fileName
    LanguageCode:
      description: indicates language code. G2P Connect supports country codes as per ISO 639.3 standard
      type: string
      pattern: '^[a-z]{3,3}$'
      example: en
    LatLong:
      type: object
      properties:
        latitude:
          type: string
          example: 11°24'12.2"N
        longitude:
          type: string
          example: 88°50'26.5"E
    MsgCallbackHeader_V1.0.0:
      type: object
      description: Message header
      properties:
        version:
          description: Messaing protocol specification version being used
          type: string
          example: 0.1.0
        message_id:
          description: |
            1. Unique message id to communicate between sender and receiver systems to realiable deliver the message over any transport layer i.e https, pub/sub, sftp etc.,
            2. The scope of message_id end with successful ack of the message by the receiver.
            3. To realy the message between hops, underlying relying parties may consider to store and forward the message with integirty, ie Signature intact.
          type: string
          example: '789'
        message_ts:
          $ref: '#/components/schemas/DateTime'
        action:
          description: G2P Connect specific action. Usually verb from the URI should go here to help store and fwd kind of processing requirements.
          type: string
        status:
          $ref: '#/components/schemas/RequestStatus'
        status_reason_code:
          $ref: '#/components/schemas/MsgHeaderStatusReasonCode'
        status_reason_message:
          description: 'Status reascon code message, if any, Helps actionanble messaging for system/end users'
          type: string
          maxLength: 999
        total_count:
          description: Total no of requests present in the message request
          type: integer
          example: 21800
        completed_count:
          description: No of requests in complteed state. Complete includes success and error requests due to funcational errors
          type: integer
          example: 50
        sender_id:
          description: |
            1. sender_id registered with the receiving system or gateway. 
            2. Used for authorization, encryption, digital sign verfication, etc., 
          type: string
          example: civilregistry.example.org
        receiver_id:
          description: 'receiver id registered with the calling system. Used for authorization, encryption, digital sign verfication, etc., functions.'
          type: string
          example: registry.example.org
        encryption_algo:
          description: |
            1. If message is encrypted, Ecnryption alog used for receiver to decrypt the message payload
            2. example: aes, rsa, aes_rsa, ecc, other
          type: string
          example:
            - aes
            - rsa
            - aes+rsa
            - ecc
            - other
      required:
        - message_id
        - message_ts
        - action
        - status
    MsgHeader_V1.0.0:
      type: object
      description: Message header
      properties:
        version:
          description: Messaing protocol specification version being used
          type: string
          example: 0.1.0
        message_id:
          description: |
            1. Unique message id to communicate between sender and receiver systems to realiable deliver the message over any transport layer i.e https, pub/sub, sftp etc.,
            2. The scope of message_id end with successful ack of the message by the receiver.
            3. To realy the message between hops, underlying relying parties may consider to store and forward the message with integirty, ie Signature intact.
          type: string
          example: '123'
        message_ts:
          $ref: '#/components/schemas/DateTime'
        action:
          description: 'G2P Connect specific action. Usually verb from the URI. Helps in sync, async, store/fwd processing. Helps identity payload type in message property.'
          type: string
        sender_id:
          description: |
            1. sender_id registered with the receiving system or gateway. 
            2. Used for authorization, encryption, digital sign verfication, etc., 
          type: string
          example: spp.example.org
        sender_uri:
          description: |
            1. sender url to accept callbacks. Applicable only for async communications and if response ack_status is ACK.
            2. Default uri is assumed to be configred on the gateway as part of sender/receiver onboarding. 
            3. For SFTP based communications, this shall be set to server/folder details.
          type: string
          format: uri
          example: 'https://spp.example.org/{namespace}/callback/on-search'
        receiver_id:
          description: 'receiver id registered with the calling system. Used for authorization, encryption, digital sign verfication, etc., functions.'
          type: string
          example: pymts.example.org
        total_count:
          description: Total no of requests present in the message request
          type: integer
          example: 21800
        encryption_algo:
          description: |
            1. If message is encrypted, Ecnryption alog used for receiver to decrypt the message payload
            2. example: aes, rsa, aes_rsa, ecc, other
          type: string
          example:
            - aes
            - rsa
            - aes+rsa
            - ecc
            - other
      required:
        - message_id
        - message_ts
        - action
        - sender_id
        - total_count
    MsgHeaderStatusReasonCode:
      type: string
      description: Message header related common status reason codes
      enum:
        - rjct.version.invalid
        - rjct.message_id.duplicate
        - rjct.message_ts.invalid
        - rjct.action.invalid
        - rjct.action.not_supported
        - rjct.total_count.invalid
        - rjct.total_count.limit_exceeded
        - rjct.errors.too_many
    MsgSignature:
      type: string
      description: 'Signature of {header}+{message} body verified using sender''s signing public key'
      example: 'Signature:  namespace="g2p", kidId="{sender_id}|{unique_key_id}|{algorithm}", algorithm="ed25519", created="1606970629", expires="1607030629", headers="(created) (expires) digest", signature="Base64(signing content)'
    Pagination:
      description: 'Pagination definition, count starts with 1'
      type: object
      properties:
        page_size:
          type: number
          format: int32
          example: 2000
        page_number:
          type: number
          format: int32
          example: 5
        total_count:
          type: number
          format: int32
          example: 24250
      required:
        - page_size
        - page_number
        - total_count
    PaginationRequest:
      description: 'Pagination definition, count starts with 1'
      type: object
      properties:
        page_size:
          type: number
          format: int32
          example: 2000
        page_number:
          type: number
          format: int32
          default: 1
          example: 5
      required:
        - page_size
    ReferenceId:
      type: string
      description: Unique reference_id set by txn initiating system for each request in a batch
      example: '12345678901234567890'
    ReferenceIdList:
      items:
        $ref: '#/components/schemas/ReferenceId'
    RequestStatus:
      type: string
      description: 'Request (e.g disburse, link, unlink, resolve, issue, search, verify, etc.,) status: <br> 1. rcvd: Received; Request received <br> 2. pdng: Pending; Request initiated <br> 3. succ: Success; Request successful <br> 4. rjct: Rejected; Request rejected'
      enum:
        - rcvd
        - pdng
        - succ
        - rjct
    SearchSort:
      description: Sorting definition
      type: object
      properties:
        attribute_name:
          type: string
          description: attribute name
        sort_order:
          type: string
          enum:
            - asc
            - desc
    SearchSortList:
      items:
        $ref: '#/components/schemas/SearchSort'
    TransactionId:
      description: Unique transaction_id set by txn initiating system (i.e sender) to co-relate requests across processing systems/service end points
      type: string
      maxLength: 99
      example: 012345678901234567890
  parameters:
    accept-language:
      in: header
      name: accept-language
      description: 'Default value: en'
      required: false
      schema:
        type: string
        example: en
    timestamp:
      in: header
      name: timestamp
      description: 'request timestamp in HTTP Date format - Tue, 06 Mar 2020 21:00:00 GMT'
      required: true
      schema:
        type: string
        example: 'Tue, 06 Mar 2020 21:00:00 GMT'
    transaction_id:
      in: path
      name: transaction_id
      description: 'Unique transaction id set by sender as part of the initiating request to co-relate requests across interface end point, sessions, etc., For e.g transaction_id be used to find status using GET call or correlate the transaction as part of the callback call.'
      required: true
      schema:
        type: string
        maxLength: 99
        example: 012345678901234567890
    summary_only:
      in: path
      name: summary_only
      description: 'Optional. Defualt is false, If summary_only set to true then only the message header with stats / status to be returend as part of implementation'
      required: true
      schema:
        type: boolean
        default: true
    beneficiary_id:
      in: path
      name: beneficiary_id
      required: true
      description: '<br> 1. Beneficiary id is a normative represenation represented as id@id-provider <br> 2. This will enumerate foundational and functioanl id''s to easily resolvable addressess <br> 3. Few examples: <br> - id@id-provider e.g 12345@mosip, 12345@PhilID <br> - id@civil-registry.issuing-agency e.g 12345@crvs.rwanda, 12345@ejanma.karnataka - id@functional-identifier.issuing-agency e.g 12345@voter.Rwanda, 12345@DL.karnataka, 12345@fruits.karnataka <br> Note: id-provider should be made configurable and DPGs operating should adapt to the local jurisdiction and policies. e.g fruits.karnataka represents farmer registry in karnataka state govt.<br>'
      schema:
        type: string
        format: '^[a-zA-Z0-9.-]+@[a-zA-Z0-9.-]+$'
        example: 12345@mosip
  responses:
    HttpErrorResponse:
      description: HTTP layer error details
      content:
        application/json:
          schema:
            type: object
            description: 'HTTP transport layer error codes. Used by components like gateways, LB responding with HTTP status codes 1xx, 2xx, 3xx, 4xx and 5xx'
            properties:
              error:
                type: object
                properties:
                  code:
                    type: string
                    description: error code
                  message:
                    type: string
                    description: error message
    Response:
      description: Acknowledgement of message received after successful validation of message and signature
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: object
                properties:
                  ack_status:
                    $ref: '#/components/schemas/Ack'
                  timestamp:
                    $ref: '#/components/schemas/DateTime'
                  error:
                    $ref: '#/components/schemas/Error'
  securitySchemes:
    x-access-token:
      type: http
      scheme: bearer
      bearerFormat: jwt
      description: Authenticating using sessiong token issued by platfrom/system api gateway or auth services issuing session token apis using client id & secret
