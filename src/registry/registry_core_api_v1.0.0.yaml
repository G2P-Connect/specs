openapi: 3.0.3
info:
  title: Interoperability APIs - Foundational/Functional registries
  x-logo:
    url: 'https://spdci.github.io/api-documentation/draft/dci-logo.png'
    backgroundColor: '#FFFFFF'
    altText: 'Digital Convergence Initiative'  
  description: |-
    The CRVS interoperability APIs describes different APIs some of them are usecase specific and other are generalized APIs to perform interoperable operations between CRVS registry and SP system.
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in upcoming version.

    1. Search: The Search API provides functionality to search based on demographic, identifiers and custom query
    2. Event subscription: The Event subscription APIs describe APIs useful to subscribe / unsubscribe events. When any event happens in crvs registry it sends event details on notify end point
    3. Request status check: The request status checking APIs implement to check status of request sent in any above APIs
    
    Gitbook reference link:
    - [CRVS - V1.0 ](https://digital-convergence-initiative-d.gitbook.io/dci-standards-1/wUwmJRFD0Hn6jI5xMat1/standards/1.-crvs)

    Code directory links:
    - [Identifiers](https://digital-convergence-initiative-d.gitbook.io/dci-standards-1/wUwmJRFD0Hn6jI5xMat1/standards/1.-crvs/4.2-data-standards/4.2.2-code-directory#cd.01-identifier_type)
    - [Marital Status](https://digital-convergence-initiative-d.gitbook.io/dci-standards-1/wUwmJRFD0Hn6jI5xMat1/standards/1.-crvs/4.2-data-standards/4.2.2-code-directory#cd.02-marital_status)
    - [Sex](https://digital-convergence-initiative-d.gitbook.io/dci-standards-1/wUwmJRFD0Hn6jI5xMat1/standards/1.-crvs/4.2-data-standards/4.2.2-code-directory#cd.03-sex)
    - [Vital event types](https://digital-convergence-initiative-d.gitbook.io/dci-standards-1/wUwmJRFD0Hn6jI5xMat1/standards/1.-crvs/4.2-data-standards/4.2.2-code-directory#cd.04-vital_events)   
    
    Each request is build up of three parts
    - signature 
    - header 
    - message
  version: 1.0.0
  contact:
    name: DCI Social Protection
    email: info@spdci.org
  license:
   name: DCI Social Protection License
   url: https://github.com/spdci/standards/blob/draft/LICENSE.md
 
servers:
  - url: "https://sandbox.spdci.org/namespace/v1.0.0"
    description: Sandbox Server
    #variables: 
     # namespace: 'dci-sp'
tags: 
  - name: Async
    description: Async endpoints
  - name: Sync 
    description: Sync endpoints
  - name: Schemas
    description: Schemas
  - name: SearchRequest
    x-displayName: SearchRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SearchRequest" />    
  - name: SearchResponse
    x-displayName: SearchResponse
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SearchResponse" />    
  - name: SubscribeRequest
    x-displayName: SubscribeRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SubscribeRequest" />    
  - name: NotifyEventRequest
    x-displayName: NotifyEventRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/NotifyEventRequest" />    
  - name: TxnStatusRequest
    x-displayName: TxnStatusRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/TxnStatusRequest" />    
  - name: TxnStatusResponse
    x-displayName: TxnStatusResponse
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/TxnStatusResponse" />    
  - name: FetchSubscriptionsRequest
    x-displayName: FetchSubscriptionsRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/FetchSubscriptionsRequest" />    
  - name: FetchSubscriptionsResponse
    x-displayName: FetchSubscriptionsResponse
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/FetchSubscriptionsResponse" />    
  - name: UnSubscribeRequest
    x-displayName: UnSubscribeRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/UnSubscribeRequest" />    
  - name: UnSubscribeResponse
    x-displayName: UnSubscribeResponse
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/UnSubscribeResponse" />  

x-tagGroups:
  - name: API Definitions
    tags:
      - Async
      - Sync
  - name: Schema Objects
    tags:
      - SearchRequest
      - SearchResponse 
      - SubscribeRequest
      - NotifyEventRequest
      - TxnStatusRequest
      - TxnStatusResponse
      - FetchSubscriptionsRequest
      - FetchSubscriptionsResponse
      - UnSubscribeRequest
      - UnSubscribeResponse  

paths:
 /registry/search:
  post: 
    summary: "/registry/search"
    description: Search person(s) in registry using identifier or custome attributes
    operationId: post_reg_search
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - search
                message:
                  type: object
                  description: The search data using which registry search to be performed
                  oneOf:
                    - $ref: "#/components/schemas/SearchRequest"
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - search
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
 /registry/on-search:
  post: 
    summary: "/registry/on-search"
    description: Search results through callback
    operationId: post_reg_on-search
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - on-search
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/SearchResponse'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - on-search
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
   
 /registry/subscribe:
  post: 
    summary: "/registry/subscribe"
    description: Subscribe to a life event with registry
    operationId: post_reg_subscribe
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - subscribe
                message:
                  type: object
                  description: Subscription request which contaion query with frequency and other info on which notification to be sent by registry to subscriber
                  oneOf:
                    - $ref: "#/components/schemas/SubscribeRequest"
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - subscribe
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
#  /registry/on-subscribe:
#   post: 
#     summary: "/registry/on-subscribe"
#     description: Subscribe results through callback
#     operationId: post_reg_on-subscribe
#     tags: 
#       -  Async
#     requestBody:
#       description: ""
#       required: true
#       content:
#         application/json:
#           schema:
#               type: object
#               properties:
#                 signature:  
#                   $ref: "#/components/schemas/MsgSignature"
#                 header:
#                   allOf:
#                     - $ref: "#/components/schemas/MsgHeader_V1.0.0"
#                     - properties:
#                         action:
#                           enum:
#                             - on-subscribe
#                 message:
#                   type: object
#                   description: Subscription information 
#                   oneOf:
#                     - $ref: "#/components/schemas/SubscribeResponse"
#                     - $ref: "#/components/schemas/EncryptedMessage"
#               required:
#                 - header
#                 - message
#         multipart/form-data:
#           schema:
#             allOf:
#               - $ref: "#/components/schemas/FileInfo"
#               - properties:
#                   action:
#                     enum:
#                       - on-subscribe
#     responses:
#         default:
#           $ref: "#/components/responses/Response"
#         '401':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '403':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '500':
#           $ref: "#/components/responses/HttpErrorResponse"
#     security:
#       - x-access-token: [ ]
#     deprecated: false
#  /registry/unsubscribe:
#   post: 
#     summary: "/registry/unsubscribe"
#     description: Unsubscribe to a life event
#     operationId: post_reg_unsubscribe
#     tags: 
#       -  Async
#     requestBody:
#       description: ""
#       required: true
#       content:
#         application/json:
#           schema:
#               type: object
#               properties:
#                 signature:  
#                   $ref: "#/components/schemas/MsgSignature"
#                 header:
#                   allOf:
#                     - $ref: "#/components/schemas/MsgHeader_V1.0.0"
#                     - properties:
#                         action:
#                           enum:
#                             - unsubscribe
#                 message:
#                   type: object
#                   description: The unsubscribe request that contain subscription ids which to be removed from subscription list 
#                   oneOf:
#                     - $ref: "#/components/schemas/UnSubscribeRequest"
#                     - $ref: "#/components/schemas/EncryptedMessage"
#               required:
#                 - header
#                 - message
#         multipart/form-data:
#           schema:
#             allOf:
#               - $ref: "#/components/schemas/FileInfo"
#               - properties:
#                   action:
#                     enum:
#                       - unsubscribe
#     responses:
#         default:
#           $ref: "#/components/responses/Response"
#         '401':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '403':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '500':
#           $ref: "#/components/responses/HttpErrorResponse"
#     security:
#       - x-access-token: [ ]
#     deprecated: false
#  /registry/on-unsubscribe:
#   post: 
#     summary: "/registry/on-unsubscribe"
#     description: Unsubscribe to a life event with registry
#     operationId: post_reg_on-unsubscribe
#     tags: 
#       -  Async
#     requestBody:
#       description: ""
#       required: true
#       content:
#         application/json:
#           schema:
#               type: object
#               properties:
#                 signature:  
#                   $ref: "#/components/schemas/MsgSignature"
#                 header:
#                   allOf:
#                     - $ref: "#/components/schemas/MsgHeader_V1.0.0"
#                     - properties:
#                         action:
#                           enum:
#                             - on-unsubscribe
#                 message:
#                   type: object
#                   oneOf:
#                     - $ref: "#/components/schemas/UnSubscribeResponse"
#                     - $ref: "#/components/schemas/EncryptedMessage"
#               required:
#                 - header
#                 - message
#         multipart/form-data:
#           schema:
#             allOf:
#               - $ref: "#/components/schemas/FileInfo"
#               - properties:
#                   action:
#                     enum:
#                       - on-unsubscribe
#     responses:
#         default:
#           $ref: "#/components/responses/Response"
#         '401':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '403':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '500':
#           $ref: "#/components/responses/HttpErrorResponse"
#     security:
#       - x-access-token: [ ]
#     deprecated: false
#  /registry/subscriptions:
#   post: 
#     summary: "/registry/subscriptions"
#     description: To retrieve list of all subscription
#     operationId: post_reg_subscriptions
#     tags: 
#       -  Async
#     requestBody:
#       description: ""
#       required: true
#       content:
#         application/json:
#           schema:
#               type: object
#               properties:
#                 signature:  
#                   $ref: "#/components/schemas/MsgSignature"
#                 header:
#                   allOf:
#                     - $ref: "#/components/schemas/MsgHeader_V1.0.0"
#                     - properties:
#                         action:
#                           enum:
#                             - subscriptions
#                 message:
#                   type: object
#                   description: To perform search based on registry type or event type
#                   oneOf:
#                     - $ref: "#/components/schemas/SubscriptionListRequest"
#                     - $ref: "#/components/schemas/EncryptedMessage"
#               required:
#                 - header
#                 - message
#         multipart/form-data:
#           schema:
#             allOf:
#               - $ref: "#/components/schemas/FileInfo"
#               - properties:
#                   action:
#                     enum:
#                       - subscriptions
#     responses: 
#         default:
#           $ref: "#/components/responses/Response"
#         '401':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '403':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '500':
#           $ref: "#/components/responses/HttpErrorResponse"
#     security:
#       - x-access-token: [ ]
#     deprecated: false
#  /registry/on-subscriptions:
#   post: 
#     summary: "/registry/on-subscriptions"
#     description: To retrive list of subscriptions
#     operationId: post_reg_on-subscriptions
#     tags: 
#       -  Async
#     requestBody:
#       description: ""
#       required: true
#       content:
#         application/json:
#           schema:
#               type: object
#               properties:
#                 signature:  
#                   $ref: "#/components/schemas/MsgSignature"
#                 header:
#                   allOf:
#                     - $ref: "#/components/schemas/MsgHeader_V1.0.0"
#                     - properties:
#                         action:
#                           enum:
#                             - on-subscriptions
#                 message:
#                   type: object
#                   description: The resposne to subscriber with list of subscriptions
#                   oneOf:
#                     - $ref: "#/components/schemas/SubscriptionListResponse"
#                     - $ref: "#/components/schemas/EncryptedMessage"
#               required:
#                 - header
#                 - message
#         multipart/form-data:
#           schema:
#             allOf:
#               - $ref: "#/components/schemas/FileInfo"
#               - properties:
#                   action:
#                     enum:
#                       - on-subscriptions
#     responses: 
#         default:
#           $ref: "#/components/responses/Response"
#         '401':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '403':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '500':
#           $ref: "#/components/responses/HttpErrorResponse"
#     security:
#       - x-access-token: [ ]
#     deprecated: false
 /registry/notify:
  post: 
    summary: "/registry/notify"
    description: Registry to notify a life event to subscrbiers
    operationId: post_reg_notify
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - notify
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/NotifyEventRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - notify
    responses:
        default:
          $ref: "#/components/responses/HttpErrorResponse"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
 /registry/txn/status:
  post: 
    summary: "/registry/txn/status"
    description: Perform async status check of previous civil registry transanctions using transaction_id and/or reference_id(s)
    operationId: post_reg_txnstatus
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - subscribe
                            - notify
                            - on-search
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/TxnStatusRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - subscribe
                      - notify
                      - on-search
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
 /registry/txn/on-status:
  post: 
    summary: "/registry/txn/on-status"
    description: Response to async status check of previous civil registrt transanctions using callback
    operationId: post_reg_on-txnstatus
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - subscribe
                            - notify
                            - on-search
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/TxnStatusResponse'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - subscribe
                      - notify
                      - on-search
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
 /registry/sync/search:
  post: 
    summary: "/registry/sync/search"
    description: Search person(s) in registry using identifier or custome attributes
    operationId: post_reg_sync_search
    tags: 
      -  Sync
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - search
                message:
                  type: object
                  description: The search data using which registry search to be performed
                  oneOf:
                    - $ref: '#/components/schemas/SearchRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
                - message
    responses:
        default:
          description: "Registry search response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature:  
                    $ref: "#/components/schemas/MsgSignature"
                  header:
                    allOf:
                      - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                      - properties:
                          action:
                            enum:
                              - on-search
                  message:
                    type: object
                    oneOf:
                      - $ref: '#/components/schemas/SearchResponse'
                      - $ref: '#/components/schemas/EncryptedMessage'
                required:
                  - header
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
#  /registry/sync/subscribe:
#   post: 
#     summary: " /registry/sync/subscribe"
#     description: Subscribe to a life event with registry
#     operationId: post_reg_sync_subscribe
#     tags: 
#       -  Sync
#     requestBody:
#       description: ""
#       required: true
#       content:
#         application/json:
#           schema:
#               type: object
#               properties:
#                 signature:  
#                   $ref: "#/components/schemas/MsgSignature"
#                 header:
#                   allOf:
#                     - $ref: "#/components/schemas/MsgHeader_V1.0.0"
#                     - properties:
#                         action:
#                           enum:
#                             - subscribe
#                 message:
#                   type: object
#                   description: Subscription request which contaion query with frequency and other info on which notification to be sent by registry to subscriber
#                   oneOf:
#                     - $ref: "#/components/schemas/SubscribeRequest"
#                     - $ref: "#/components/schemas/EncryptedMessage"
#               required:
#                 - header
#                 - message
#         multipart/form-data:
#           schema:
#             allOf:
#               - $ref: "#/components/schemas/FileInfo"
#               - properties:
#                   action:
#                     enum:
#                       - subscribe
#     responses:
#         default:
#           description: "Subscription response"
#           content:
#             application/json:
#               schema:
#                 type: object
#                 properties:
#                   signature:  
#                     $ref: "#/components/schemas/MsgSignature"
#                   header:
#                     allOf:
#                       - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
#                   message:
#                     type: object
#                     oneOf:
#                       - $ref: '#/components/schemas/SubscribeResponse'
#                       - $ref: '#/components/schemas/EncryptedMessage'
#                 required:
#                   - header
#         '401':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '403':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '500':
#           $ref: "#/components/responses/HttpErrorResponse"
#     security:
#       - x-access-token: [ ]
#     deprecated: false
 /registry/sync/subscriptions:
  post: 
    summary: "/registry/sync/subscriptions"
    description: To retrive list of subscriptions
    operationId: post_reg_sync_subscriptions
    tags: 
      -  Sync
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - fetch_subscriptions
                message:
                  type: object
                  description: To perform search based on registry type or event type
                  oneOf:
                    - $ref: "#/components/schemas/FetchSubscriptionsRequest"
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
    responses: 
        default:
          description: "Subscription list response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature:  
                    $ref: "#/components/schemas/MsgSignature"
                  header:
                    allOf:
                      - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                  message:
                    type: object
                    oneOf:
                      - $ref: '#/components/schemas/FetchSubscriptionsResponse'
                      - $ref: '#/components/schemas/EncryptedMessage'
                required:
                  - header
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
 /registry/sync/unsubscribe:
  post: 
    summary: "/registry/sync/unsubscribe"
    description: Unsubscribe to a life event with registry
    operationId: post_reg_sync_unsubscribe
    tags: 
      -  Sync
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - unsubscribe
                message:
                  type: object
                  description: The unsubscribe request that contain subscription ids which to be removed from subscription list
                  oneOf:
                    - $ref: "#/components/schemas/UnSubscribeRequest"
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - unsubscribe
    responses:
        default:
          description: "Unsubscribe response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature:  
                    $ref: "#/components/schemas/MsgSignature"
                  header:
                    allOf:
                      - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                  message:
                    type: object
                    oneOf:
                      - $ref: '#/components/schemas/UnSubscribeResponse'
                      - $ref: '#/components/schemas/EncryptedMessage'
                required:
                  - header
                  - message
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
 /registry/sync/txn/status:
  post: 
    summary: "/registry/sync/txn/status"
    description: Perform async status check of previous civil registry transanctions using transaction_id and/or reference_id(s)
    operationId: post_reg_sync_txnstatus
    tags: 
      -  Sync
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - search
                            - subscribe
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/TxnStatusRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
                - message
    responses:
        default:
          description: "Transaction status check response"
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    signature:  
                      $ref: "#/components/schemas/MsgSignature"
                    header:
                      allOf:
                        - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                        - properties:
                            action:
                              enum:
                                - on-search
                                - notify
                    message:
                      type: object
                      oneOf:
                        - $ref: '#/components/schemas/TxnStatusResponse'
                        - $ref: '#/components/schemas/EncryptedMessage'
                  required:
                    - header
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
components:
  schemas:
    ###### src/extensions/cdpi schema objects
    cdpi_PersonId: 
      $ref: ../extensions/cdpi/PersonId.yaml
    
    ###### src/extensions/dci schema objects
    dci_IdentifierType: 
      $ref: ../extensions/dci/IdentifierType.yaml
    dci_IdentifierTypeValue: 
      $ref: ../extensions/dci/IdentifierTypeValue.yaml
    dci_MaritalStatus: 
      $ref: ../extensions/dci/MaritalStatus.yaml
    dci_Name: 
      $ref: ../extensions/dci/Name.yaml
    dci_PersonRecord: 
      $ref: ../extensions/dci/PersonRecord.yaml
    dci_RecordType: 
      $ref: ../extensions/dci/RecordType.yaml
    dci_Sex: 
      $ref: ../extensions/dci/Sex.yaml
    dci_VitalEvents: 
      $ref: ../extensions/dci/VitalEvents.yaml

    ###### src/extensions/fhir schema objects
    
    ###### src/extensions/google schema objects
    GooglePlusCode: 
      $ref: ../extensions/google/GooglePlusCode.yaml

    ###### src/extensions/mosip schema objects
    mosip_EventType: 
      $ref: ../extensions/mosip/EventType.yaml
    mosip_LangaugeValue: 
      $ref: ../extensions/mosip/LangaugeValue.yaml
    mosip_LanguageValueList: 
      $ref: ../extensions/mosip/LanguageValueList.yaml
    mosip_MOSIPVerifiableCredential: 
      $ref: ../extensions/mosip/MOSIPVerifiableCredential.yaml
    mosip_RecordType: 
      $ref: ../extensions/mosip/RecordType.yaml
    mosip_RegistrationRecord: 
      $ref: ../extensions/mosip/RegistrationRecord.yaml  
        
    ###### src/extensions/nid schema objects
    nid_DeceasedRecord: 
      $ref: ../extensions/nid/DeceasedRecord.yaml
    nid_Document: 
      $ref: ../extensions/nid/Document.yaml
    nid_EKycDetails: 
      $ref: ../extensions/nid/EKycDetails.yaml
    nid_RecordType: 
      $ref: ../extensions/nid/RecordType.yaml
    nid_ResidentAddress:
      $ref: ../extensions/nid/ResidentAddress.yaml
    nid_ResidentLocalAddress:
      $ref: ../extensions/nid/ResidentLocalAddress.yaml
    nid_ResidentLocalName:
      $ref: ../extensions/nid/ResidentLocalName.yaml
    nid_ResidentNationality:
      $ref: ../extensions/nid/ResidentNationality.yaml
    nid_ResidentPhoto:
      $ref: ../extensions/nid/ResidentPhoto.yaml
    nid_ResidentRecord:
      $ref: ../extensions/nid/ResidentRecord.yaml
    
    ###### src/extensions/openid schema objects
    openid_Address: 
      $ref: ../extensions/openid/Address.yaml
    openid_PersonRecord:
      $ref: ../extensions/openid/PersonRecord.yaml
    openid_PersonDocDetails: 
      $ref: ../extensions/openid/PersonDocDetails.yaml
   
    ###### src/registry/schema/civil schema objects
    civilReg_EventType: 
      $ref: schema/civil/EventType.yaml
    civilReg_PersonRecord: 
      $ref: schema/civil/PersonRecord.yaml
    civilReg_RecordType: 
        $ref: schema/civil/RecordType.yaml
    civilReg_RelatedPerson: 
      $ref: schema/civil/RelatedPerson.yaml

    ###### src/registry/schema/core schema objects
    coreReg_AllEvents: 
      $ref: schema/core/AllEvents.yaml
    coreReg_AllQueries: 
      $ref: schema/core/AllQueries.yaml 
    coreReg_AllRecords: 
      $ref: schema/core/AllRecords.yaml
    coreReg_AllRecordTypes: 
      $ref: schema/core/AllRecordTypes.yaml
    coreReg_EventType: 
      $ref: schema/core/EventType.yaml
    FetchSubscriptionsRequest:
      type: object
      properties:
        version:
          $ref: ../common/schema/Version-1.0.0.yaml
        data:
          $ref: schema/core/FetchSubscriptionsRequest.yaml     

    FetchSubscriptionsResponse:
      type: object
      properties:
        version:
          $ref: ../common/schema/Version-1.0.0.yaml
        data:
          $ref: schema/core/FetchSubscriptionsResponse.yaml     
    NotifyEventRequest:
      type: object
      properties:
        version:
          $ref: ../common/schema/Version-1.0.0.yaml
        data:
          $ref: schema/core/NotifyEventRequest.yaml        
    other_RecordType: 
      $ref: schema/core/RegistryRecordType.yaml
    coreReg_Type: 
      $ref: schema/core/RegistryType.yaml
    SearchRequest:
      type: object
      properties:
        version:
          $ref: ../common/schema/Version-1.0.0.yaml
        data:
          $ref: schema/core/SearchRequest.yaml
    SearchResponse:
      type: object
      properties:
        version:
          $ref: ../common/schema/Version-1.0.0.yaml
        data:
          $ref: schema/core/SearchResponse.yaml     
    SearchStatusReasonCode: 
      $ref: schema/core/SearchStatusReasonCode.yaml
    SubscribeRequest:
      type: object
      properties:
        version:
          $ref: ../common/schema/Version-1.0.0.yaml
        data:
          $ref: schema/core/SubscribeRequest.yaml      

    # SubscribeResponse: 
    #   $ref: schema/core/SubscribeResponse.yaml
    SubscribeStatusReasonCode: 
      $ref: schema/core/SubscribeStatusReasonCode.yaml
    SubscriptionCode: 
      $ref: schema/core/SubscriptionCode.yaml
    SubscriptionInfo:
      $ref: schema/core/SubscriptionInfo.yaml
    SubscriptionStatus:
        $ref: schema/core/SubscriptionStatus.yaml
    TxnStatusRequest: 
      type: object
      properties:
        version:
          $ref: ../common/schema/Version-1.0.0.yaml
        data:
          $ref: schema/core/TxnStatusRequest.yaml    
    TxnStatusResponse: 
      type: object
      properties:
        version:
          $ref: ../common/schema/Version-1.0.0.yaml
        data:
          $ref: schema/core/TxnStatusResponse.yaml     
    UnSubscribeRequest: 
      type: object
      properties:
        version:
          $ref: ../common/schema/Version-1.0.0.yaml
        data:
          $ref: schema/core/UnSubscribeRequest.yaml    
    UnSubscribeResponse: 
      type: object
      properties:
        version:
          $ref: ../common/schema/Version-1.0.0.yaml
        data:
          $ref: schema/core/UnSubscribeResponse.yaml    
    UnSubscribeStatusReasonCode: 
      $ref: schema/core/UnSubscribeStatusReasonCode.yaml           
  
    ###### Common schema objects
    Ack: 
      $ref: ../common/schema/Ack.yaml
    AdditionalInfo:
      $ref: ../common/schema/AdditionalInfo.yaml
    AttributeNameValue: 
      $ref: ../common/schema/AttributeNameValue.yaml
    AttributeNameValueList: 
      $ref: ../common/schema/AttributeNameValueList.yaml
    AttributeValue: 
      $ref: ../common/schema/AttributeValue.yaml
    Consent: 
      $ref: ../common/schema/Consent.yaml
    DateTime: 
      $ref: ../common/schema/DateTime.yaml
    EncryptedMessage: 
      $ref: ../common/schema/EncryptedMessage.yaml
    Error: 
      $ref: ../common/schema/Error.yaml
    EventFrequency:
      $ref: ../common/schema/EventFrequency.yaml
    ExpCondition: 
      $ref: ../common/schema/ExpCondition.yaml
    ExpOperator: 
      $ref: ../common/schema/ExpOperator.yaml
    Expression: 
      $ref: ../common/schema/Expression.yaml
    ExpressionList: 
      $ref: ../common/schema/ExpressionList.yaml
    ExpressionResult: 
      $ref: ../common/schema/ExpressionResult.yaml
    ExpressionResultList: 
      $ref: ../common/schema/ExpressionResultList.yaml
    ExpressionWithCondition: 
      $ref: ../common/schema/ExpressionWithCondition.yaml
    ExpressionWithConditionList: 
      $ref: ../common/schema/ExpressionWithConditionList.yaml
    FileInfo: 
      $ref: ../common/schema/FileInfo.yaml
    LanguageCode: 
      $ref: ../common/schema/LanguageCode.yaml
    LatLong: 
      $ref: ../common/schema/LatLong.yaml
    MsgCallbackHeader_V1.0.0: 
      $ref: ../common/schema/MsgCallbackHeader_V1.0.0.yaml
    MsgHeader_V1.0.0: 
      $ref: ../common/schema/MsgHeader_V1.0.0.yaml
    MsgHeaderStatusReasonCode: 
      $ref: ../common/schema/MsgHeaderStatusReasonCode.yaml
    MsgSignature: 
      $ref:  ../common/schema/MsgSignature.yaml
    Pagination: 
      $ref: ../common/schema/Pagination.yaml
    PaginationRequest: 
      $ref: ../common/schema/PaginationRequest.yaml
    ReferenceId: 
      $ref: ../common/schema/ReferenceId.yaml
    ReferenceIdList: 
      $ref: ../common/schema/ReferenceIdList.yaml
    RequestStatus: 
      $ref: ../common/schema/RequestStatus.yaml
    SearchSort: 
      $ref: ../common/schema/SearchSort.yaml
    SearchSortList: 
      $ref: ../common/schema/SearchSortList.yaml
    TransactionId:  
      $ref: ../common/schema/TransactionId.yaml
  parameters:
    accept-language:
      $ref: ../common/parameter/accept-language.yaml
    timestamp:
      $ref: ../common/parameter/timestamp.yaml
    transaction_id:
      $ref: ../common/parameter/transaction_id.yaml
    summary_only:
      $ref: ../common/parameter/summary_only.yaml
    beneficiary_id:
      $ref: ../common/parameter/beneficiary_id.yaml
  responses: 
    HttpErrorResponse:
      $ref: ../common/response/HttpErrorResponse.yaml       
    Response:
      $ref: ../common/response/Response.yaml    
  securitySchemes:
    x-access-token:
      $ref: ../common/security/x-access-token.yaml
