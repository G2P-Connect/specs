openapi: 3.0.0
info:
  title: Digital Credentialing
  description: 'Discussions <a href= "https://github.com/G2P-Connect/.github/discussions/16">thread</a> <br><br> Manage issuance of digital credential'
  version: 0.1.0
  contact:
    name: G2P Connect
    email: info@g2pconnect.global
  license:
    name: G2P Connect License
    url: 'https://github.com/G2P-Connect/specs/blob/main/LICENSE'
servers:
  - url: 'https://sandbox.dpg.org/v0.1.0/{namespace}'
    description: Sandbox Server
paths:
  /credential/issue:
    post:
      summary: 'CRED-ISSU : /credential/issue'
      description: Issue credential
      operationId: post_g2p_cred_issue
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgHeader'
                    - properties:
                        action:
                          enum:
                            - issue
                message:
                  type: object
                  properties:
                    transaction_id:
                      $ref: '#/components/schemas/TransactionId'
                    issue-request:
                      type: array
                      items:
                        $ref: '#/components/schemas/IssueRequest'
              required:
                - header
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - issue
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
  /credential/on-issue:
    post:
      summary: 'CRED-ON-ISSU : /credential/on-issue'
      description: Issuance info through callback
      operationId: post_g2p_cred_on-issue
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgCallbackHeader'
                    - properties:
                        action:
                          enum:
                            - on-issue
                message:
                  type: object
                  properties:
                    transaction_id:
                      $ref: '#/components/schemas/TransactionId'
                    issue-response:
                      type: array
                      items:
                        $ref: '#/components/schemas/IssueResponse'
              required:
                - header
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - on-issue
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
  /credential/status:
    post:
      summary: 'CRED-STS : /credential/status'
      description: Credential status update request
      operationId: post_g2p_cred_status
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgHeader'
                    - properties:
                        action:
                          enum:
                            - status
                message:
                  type: object
                  properties:
                    transaction_id:
                      $ref: '#/components/schemas/TransactionId'
                    credential_status:
                      type: array
                      items:
                        $ref: '#/components/schemas/StatusRequest'
              required:
                - header
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - status
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
  /credential/on-status:
    post:
      summary: 'CRED-ON-STS : /credential/on-status'
      description: Credentail status update results through call back
      operationId: post_g2p_cred_on-status
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgCallbackHeader'
                    - properties:
                        action:
                          enum:
                            - on-status
                message:
                  type: object
                  properties:
                    transaction_id:
                      $ref: '#/components/schemas/TransactionId'
                    credential_status:
                      type: array
                      items:
                        $ref: '#/components/schemas/StatusResponse'
              required:
                - header
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - status'
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
  /credential/search:
    post:
      summary: 'CRED-SRCH : /credential/search'
      description: 'Search credential by credential id, issuer, beneficary id, etc.,'
      operationId: post_g2p_cred_search
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgHeader'
                    - properties:
                        action:
                          enum:
                            - search
                message:
                  type: object
                  properties:
                    transaction_id:
                      $ref: '#/components/schemas/TransactionId'
                    search-request:
                      $ref: '#/components/schemas/SearchRequest'
              required:
                - header
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - search
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
  /credential/on-search:
    post:
      summary: 'CRED-ON-SRCH : /credential/on-search'
      description: Credentail search results through call back
      operationId: post_g2p_cred_on-search
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgCallbackHeader'
                    - properties:
                        action:
                          enum:
                            - on-search
                message:
                  type: object
                  properties:
                    transaction_id:
                      $ref: '#/components/schemas/TransactionId'
                    search_response:
                      type: array
                      items:
                        $ref: '#/components/schemas/SearchResponse'
              required:
                - header
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - on-search'
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
  /credential/txn/status:
    post:
      summary: 'CRED-TXN-STS : /credential/txn/status'
      description: Perform async status check of previous credential transanctions using transaction_id and/or reference_id(s)
      operationId: post_g2p_cred_txnstatus
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgHeader'
                    - properties:
                        action:
                          enum:
                            - issue
                            - search
                            - status
                message:
                  type: object
                  properties:
                    transaction_id:
                      $ref: '#/components/schemas/TransactionId'
                    txnstatus_request:
                      $ref: '#/components/schemas/TxnStatusRequest'
              required:
                - header
                - message
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - issue
                        - search
                        - status
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
  /credential/txn/on-status:
    post:
      summary: 'CRED-TXN-ON-STS : /credential/txn/on-status'
      description: Response to async status check of previous credential transanctions using callback
      operationId: post_g2p_cred_on-txnstatus
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgCallbackHeader'
                    - properties:
                        action:
                          enum:
                            - on-issue
                            - on-search
                            - on-status
                message:
                  type: object
                  properties:
                    transaction_id:
                      $ref: '#/components/schemas/TransactionId'
                    txnstatus_response:
                      $ref: '#/components/schemas/TxnStatusResponse'
              required:
                - header
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - on-issue
                        - on-search
                        - on-status
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
components:
  schemas:
    IssueRequest:
      type: object
      description: Digital credential issuance request
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
        type:
          type: string
          description: 'The value of the type property MUST be, or map to (through interpretation of the @context property), one or more URIs. If more than one URI is provided, the URIs MUST be interpreted as an unordered set.'
        issuer:
          $ref: '#/components/schemas/CredentialIssuer'
        id:
          $ref: '#/components/schemas/PersonId'
        sharableAttributes:
          description: Attribtues of the subject to be shared as part of VC from the issuance system
          items:
            type: string
        additional_info:
          description: Object to store any addition info related to the subject for issuance of crendential
          items:
            $ref: '#/components/schemas/AdditionalInfo'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - timestamp
        - type
        - issuer
    IssueResponse:
      type: object
      description: 'Digital credential issuance '
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
        status:
          $ref: '#/components/schemas/RequestStatus'
        status_reason_code:
          $ref: '#/components/schemas/IssueStatusReasonCode'
        status_reason_message:
          description: Status reason code message. Helps actionanble messaging for systems/end users
          type: string
          maxLength: 999
        credential:
          oneOf:
            - $ref: '#/components/schemas/Credential'
            - $ref: '#/components/schemas/VerifiableCredential'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - timestamp
        - status
    IssueStatusReasonCode:
      type: string
      description: Credentiling issue status reason codes
      enum:
        - rjct.reference_id.invalid
        - rjct.reference_id.duplicate
        - rjct.timestamp.invalid
        - rjct.type.invalid
        - rjct.issuer.invalid
        - rjct.subject.invalid
        - rjct.share_attributes.invalid
    SearchRequest:
      type: object
      description: Request to search credential using credential subject id or issuer id
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        request_type:
          type: string
          enum:
            - issue
            - status
        attribute_type:
          type: string
          enum:
            - transaction_id
            - reference_id_list
            - issuer_id
            - subject_id
        attribute_value:
          oneOf:
            - $ref: '#/components/schemas/TransactionId'
            - $ref: '#/components/schemas/ReferenceIdList'
            - $ref: '#/components/schemas/CredentialIssuerId'
            - $ref: '#/components/schemas/CredentialSubjectId'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - request_type
        - attribute_type
        - attribute_value
    SearchResponse:
      type: object
      description: Digital credential
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
        status:
          $ref: '#/components/schemas/RequestStatus'
        status_reason_code:
          $ref: '#/components/schemas/SearchStatusReasonCode'
        status_reason_message:
          description: Status reason code message. Helps actionanble messaging for systems/end users
          type: string
          maxLength: 999
        credentials:
          items:
            oneOf:
              - $ref: '#/components/schemas/Credential'
              - $ref: '#/components/schemas/VerifiableCredential'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - timestamp
        - status
    SearchStatusReasonCode:
      type: string
      description: Credentailing search reason codes
      enum:
        - rjct.reference_id.invalid
        - rjct.reference_id.duplicate
        - rjct.timestamp.invalid
        - rjct.request_type.invalid
        - rjct.attribute_type.invalid
        - rjct.srch_transaction_id.invalid
        - rjct.srch_transaction_id.not_found
        - rjct_srch_reference_id.invalid
        - rjct_srch_reference_id.not_found
        - rjct.srch.too_many_records_found
        - rjct.src.issuer_id.invalid
        - rjct.srch_subject_id.invalid
    StatusRequest:
      type: object
      description: Request to revoke credential using credential subject id
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
        id:
          $ref: '#/components/schemas/CredentialId'
        status:
          type: string
          description: status codes
          enum:
            - revoke
            - suspend
            - un-suspend
          example: suspend
        reason:
          type: string
          description: short message to describe the status updatre reason
          example: Disciplinary action
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - timestamp
        - id
        - status
    StatusResponse:
      type: object
      description: Response to Revoke credential request through callback
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
        status:
          $ref: '#/components/schemas/RequestStatus'
        status_reason_code:
          $ref: '#/components/schemas/StatusStatusReasonCode'
        status_reason_message:
          description: Status reason code message. Helps actionanble messaging for systems/end users
          type: string
          maxLength: 999
        credentialStatus:
          $ref: '#/components/schemas/CredentialStatus'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - timestamp
        - status
    StatusStatusReasonCode:
      type: string
      description: Credentiling status reason codes
      enum:
        - rjct.reference_id.invalid
        - rjct.reference_id.duplicate
        - rjct.timestamp.invalid
        - rjct.id.invalid
        - rjct.status.invalid
        - rjct.reason.invalid
    TxnStatusRequest:
      type: object
      description: Request to search credential using credential subject id or issuer id
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        search_type:
          type: string
          enum:
            - transaction_id
            - reference_id_list
        search_attribute:
          oneOf:
            - $ref: '#/components/schemas/TransactionId'
            - $ref: '#/components/schemas/ReferenceIdList'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - search_type
        - search_attribute
    TxnStatusResponse:
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/IssueResponse'
          - $ref: '#/components/schemas/SearchResponse'
          - $ref: '#/components/schemas/StatusResponse'
      example:
        on-txnstatus-response:
          reference_id: test
          timestamp: test
          status: SUCC
    AdditionalInfo:
      type: object
      description: Additional JSON property oject to hold custom user defined contextual data
    Credential:
      type: object
      description: 'Credential as per w3c <a href="https://www.w3.org/TR/vc-data-model">specs</a>'
      properties:
        '@context':
          items:
            type: string
            format: uri
        id:
          $ref: '#/components/schemas/CredentialId'
        type:
          description: 'The value of the type property MUST be, or map to (through interpretation of the @context property), one or more URIs. If more than one URI is provided, the URIs MUST be interpreted as an unordered set.'
          items:
            type: string
        credentialSubject:
          $ref: '#/components/schemas/CredentialSubject'
        issuer:
          $ref: '#/components/schemas/CredentialIssuer'
        issuanceDate:
          $ref: '#/components/schemas/Timestamp'
        credentialSchema:
          $ref: '#/components/schemas/CredentialSchema'
        expirationDate:
          $ref: '#/components/schemas/Timestamp'
        credentialStatus:
          $ref: '#/components/schemas/CredentialStatus'
      required:
        - id
        - type
        - credentialSubject
        - issuer
        - issuanceDate
    CredentialId:
      description: Id property is intended to unambiguously refer to credential document or subject
      type: string
      format: uri or did
    CredentialIssuer:
      description: The value of the issuer property MUST be either a URI or an object containing an id property.
      anyOf:
        - $ref: '#/components/schemas/CredentialIssuerId'
        - $ref: '#/components/schemas/AdditionalInfo'
    CredentialIssuerId:
      description: Credentail issuer id
      type: string
      format: uri or did
    CredentialSchema:
      description: The value of the credentialSchema property MUST be one or more data schemas that provide verifiers with enough information to determine if the provided data conforms to the provided schema
      items:
        type: object
        properties:
          id:
            type: string
          type:
            type: string
    CredentialStatus:
      description: Credential status object
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CredentialId'
        type:
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/AdditionalInfo'
    CredentialSubject:
      type: object
      description: The value of the credentialSubject property is defined as a set of objects that contain one or more properties that are each related to a subject of the verifiable credential. Each object MAY contain an id
      properties:
        id:
          $ref: '#/components/schemas/PersonId'
        property:
          items:
            $ref: '#/components/schemas/AdditionalInfo'
      required:
        - id
    CredentialSubjectId:
      description: Credential subject id
      properties:
        id:
          $ref: '#/components/schemas/PersonId'
    Error:
      description: |
        Describes an error object that is returned to standard post call request. <br>
        1. This object shall be sent when any request received by a participant is not parsable or message integrity check fails. <br>
        2. This object may be used across all transport protocols to acknowledge the receipt of a message i.e HTTPS, FTP, Messaging etc., <br>"
      type: object
      properties:
        code:
          type: string
          description: Standard error code
          enum:
            - err.request.bad
            - err.request.unauthorized
            - err.request.forbidden
            - err.request.not_found
            - err.request.timeout
            - err.version.not_supported
            - err.request.too_many_requests
            - err.sender_id.invalid
            - err.sender_uri.invalid
            - err.receiver_id.invalid
            - err.signature.missing
            - err.signature.invalid
            - err.encryption.invalid
            - err.service.unavailable
        message:
          type: string
          description: message to describe above error code
          maxLength: 999
    FileInfo:
      type: object
      description: File info. Used in file upload feature using HTTPS
      properties:
        action:
          description: G2P Connect specific actions. Usually verb from the URI should go here to help store and fwd kind of processing requirements.
          type: string
        fileName:
          description: Disbursement instruction file representing Disburse or OnDisburse end point elements i.e signature/header/message entities as a file record
          type: string
          format: binary
        fileFormat:
          description: 'File content format. e.g json, csv, etc.,'
          type: string
          default: json
          example: csv
      required:
        - action
        - fileName
    LanguageCode:
      description: indicates language code. G2P Connect supports country codes as per ISO 639.3 standard
      type: string
      pattern: '^[a-z]{3,3}$'
      example: en
    MsgCallbackHeader:
      type: object
      description: Message header
      properties:
        version:
          description: Messaing protocol specification version being used
          type: string
          example: 0.1.0
        message_id:
          description: Unique message id to communicate between sender and receiver systems. Receiving system should echo the orignial message_id for correlations.
          type: string
          example: '123456789020211216223812'
        message_ts:
          description: Time of message generation in RFC3339 format
          type: string
          format: date-time
          example: '2022-12-04T18:02:35+00:00'
        action:
          description: G2P Connect specific action. Usually verb from the URI should go here to help store and fwd kind of processing requirements.
          type: string
        status:
          $ref: '#/components/schemas/RequestStatus'
        status_reason_code:
          $ref: '#/components/schemas/MsgHeaderStatusReasonCode'
        status_reason_message:
          description: 'Status reascon code message, if any, Helps actionanble messaging for system/end users'
          type: string
          maxLength: 999
        total_count:
          description: Total no of requests present in the message request
          type: integer
          example: 21800
        completed_count:
          description: No of requests in complteed state. Complete includes success and error requests due to funcational errors
          type: integer
          example: 50
        sender_id:
          description: 'send id registered with the receiving system. Used for authorization, encryption, digital sign verfication, etc., functions.'
          type: string
          example: '10089'
        sender_uri:
          description: sender url to accept callbacks
          type: string
          format: uri
          example: ''
        receiver_id:
          description: 'receiver id registered with the calling system. Used for authorization, encryption, digital sign verfication, etc., functions.'
          type: string
          example: '52077'
        receiver_uri:
          description: receiver url to accept callbacks
          type: string
          format: uri
          example: ''
      required:
        - message_id
        - message_ts
        - action
        - status
    MsgHeader:
      type: object
      description: Message header
      properties:
        version:
          description: Messaing protocol specification version being used
          type: string
          example: 0.1.0
        message_id:
          description: 'Unique message id to communicate between sender and receiver systems to realiable deliver the message over any transport layer i.e https, pub/sub, sftp etc.,'
          type: string
          example: '123456789020211216223812'
        message_ts:
          description: Time of message generation in RFC3339 format
          type: string
          format: date-time
          example: '2022-12-04T18:01:07+00:00'
        action:
          description: 'G2P Connect specific action. Usually verb from the URI. Helps in sync, async, store/fwd processing. Helps identity payload type in message property.'
          type: string
        sender_id:
          description: 'send id registered with the receiving system. Used for authorization, encryption, digital sign verfication, etc., functions.'
          type: string
          example: '10089'
        sender_uri:
          description: sender url to accept callbacks
          type: string
          format: uri
          example: 'https://pymts.sender.org/g2p/callback/on-disburse'
        receiver_id:
          description: 'receiver id registered with the calling system. Used for authorization, encryption, digital sign verfication, etc., functions.'
          type: string
          example: '52077'
        total_count:
          description: Total no of requests present in the message request
          type: integer
          example: 21800
      required:
        - message_id
        - message_ts
        - action
    MsgHeaderStatusReasonCode:
      type: string
      description: Message header related common status reason codes
      enum:
        - rjct.version.invalid
        - rjct.message_id.duplicate
        - rjct.message_ts.invalid
        - rjct.action.invalid
        - rjct.action.not_supported
        - rjct.total_count.invalid
        - rjct.total_count.limit_exceeded
        - rjct.errors.too_many
    MsgSignature:
      type: string
      description: 'Signature of {header}+{message} body verified using sender''s signing public key'
      example: 'Signature:  namespace="g2p", kidId="{sender_id}|{unique_key_id}|{algorithm}", algorithm="ed25519", created="1606970629", expires="1607030629", headers="(created) (expires) digest", signature="Base64(signing content)'
    PersonId:
      type: string
      description: '<br> 1. Beneficiary id is a normative case insensitive represenation represented as id@id-provider <br> 2. This will enumerate foundational and functioanl id''s to easily resolvable addressess <br> 3. This property is intended to unambiguously refer to an object, such as a person, organization, etc., <br> 4. Few examples: <br> - id@identifier-type.id-provider e.g 12345@token.mosip, 12345@uid.aadhaar, 12345@vid.philid <br> - id@civil-registry.issuing-agency e.g 12345@crvs.rwanda, 12345@ejanma.karnataka <br> - id@functional-identifier.issuing-agency e.g 12345@voter.Rwanda, 12345@DL.karnataka, 12345@fruits.karnataka <br> Note: id-provider should be made configurable and DPGs operating should adapt to the local jurisdiction and policies. e.g fruits.karnataka represents farmer registry in karnataka state govt.<br>'
      format: '^[a-zA-Z0-9.-]+@[a-zA-Z0-9.-]+$'
      example: 12345@token.mosip
    ReferenceId:
      type: string
      description: Unique reference_id set by txn initiating system for each request in a batch
      example: '12345678901234567890'
    ReferenceIdList:
      items:
        $ref: '#/components/schemas/ReferenceId'
    RequestStatus:
      type: string
      description: 'Request (e.g disburse, link, unlink, resolve, issue, search, verify, etc.,) status: <br> 1. rcvd: Received; Request received <br> 2. pdng: Pending; Request initiated <br> 3. succ: Success; Request successful <br> 4. rjct: Rejected; Request rejected'
      enum:
        - rcvd
        - pdng
        - succ
        - rjct
    Timestamp:
      type: string
      description: datetime in RFC3339 format
      format: date-time
      example: '2022-12-04T17:20:07-04:00'
    TransactionId:
      description: Unique transaction_id set by txn initiating system (i.e sender) to co-relate requests across processing systems/service end points
      type: string
      maxLength: 99
      example: 012345678901234567890
    VerifiableCredential:
      description: 'Verifiable credential metadata as per w3c <a href="https://www.w3.org/TR/vc-data-model">specs</a>'
      allOf:
        - $ref: '#/components/schemas/Credential'
        - properties:
            proof:
              $ref: '#/components/schemas/AdditionalInfo'
      required:
        - proof
  parameters:
    accept-language:
      in: header
      name: accept-language
      description: 'Default value: en'
      required: false
      schema:
        type: string
        example: en
    timestamp:
      in: header
      name: timestamp
      description: 'request timestamp in HTTP Date format - Tue, 06 Mar 2020 21:00:00 GMT'
      required: true
      schema:
        type: string
        example: 'Tue, 06 Mar 2020 21:00:00 GMT'
    transaction_id:
      in: path
      name: transaction_id
      description: 'Unique transaction id set by sender as part of the initiating request to co-relate requests across interface end point, sessions, etc., For e.g transaction_id be used to find status using GET call or correlate the transaction as part of the callback call.'
      required: true
      schema:
        type: string
        maxLength: 99
        example: 012345678901234567890
    summary_only:
      in: path
      name: summary_only
      description: 'Optional. Defualt is false, If summary_only set to true then only the message header with stats / status to be returend as part of implementation'
      required: true
      schema:
        type: boolean
        default: true
    beneficiary_id:
      in: path
      name: beneficiary_id
      required: true
      description: '<br> 1. Beneficiary id is a normative represenation represented as id@id-provider <br> 2. This will enumerate foundational and functioanl id''s to easily resolvable addressess <br> 3. Few examples: <br> - id@id-provider e.g 12345@mosip, 12345@PhilID <br> - id@civil-registry.issuing-agency e.g 12345@crvs.rwanda, 12345@ejanma.karnataka - id@functional-identifier.issuing-agency e.g 12345@voter.Rwanda, 12345@DL.karnataka, 12345@fruits.karnataka <br> Note: id-provider should be made configurable and DPGs operating should adapt to the local jurisdiction and policies. e.g fruits.karnataka represents farmer registry in karnataka state govt.<br>'
      schema:
        type: string
        format: '^[a-zA-Z0-9.-]+@[a-zA-Z0-9.-]+$'
        example: 12345@mosip
  responses:
    HttpErrorResponse:
      description: HTTP layer error details
      content:
        application/json:
          schema:
            type: object
            description: 'HTTP transport layer error codes. Used by components like gateways, LB responding with HTTP status codes 1xx, 2xx, 3xx, 4xx and 5xx'
            properties:
              error:
                type: object
                properties:
                  code:
                    type: string
                    description: error code
                  message:
                    type: string
                    description: error message
    Response:
      description: Acknowledgement of message received after successful validation of message and signature
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: object
                properties:
                  ack_status:
                    type: string
                    description: |
                      1. ACK: If the request is valid (for basic checks) and async callback (i.e webhook) will be invoked by reciever back to the sender.
                      2. NACK: If the request is valid (for basic checks) and there is no futher updates from reciever back to the sender.
                      3. ERR: If the reuqest is invalid and reciver can't process the request. error object holds error code, message.
                    enum:
                      - ACK
                      - NACK
                      - ERR
                  timestamp:
                    $ref: '#/components/schemas/Timestamp'
                  error:
                    $ref: '#/components/schemas/Error'
  securitySchemes:
    x-access-token:
      type: http
      scheme: bearer
      bearerFormat: jwt
      description: Authenticating using sessiong token issued by platfrom/system api gateway or auth services issuing session token apis using client id & secret
