openapi: 3.0.0
info:
  title: G2P Connect authorization  APIs
  description: 'This is an adaptation of G2P Connect core version 0.1.0. <br><br> <b>Overview:</b> <br>   1. The scope of these end points to standarise issuance of access tokens using existing standards like oauth2 and oidc flows. <br> 2. Helps standarises end point access across g2p complaint api stack. <br> 3. Additional security like IP white listing, private networks, etc are outside the scope of G2P Connect standards. <br> 4. Each country shall decide such operational models based on country requirements. <br> '
  version: 0.1.0
  contact:
    name: G2P Connect
    email: info@g2pconnect.global
  license:
    name: G2P Connect License
    url: 'https://github.com/G2P-Connect/specs/blob/main/LICENSE'
tags:
  - name: 1. OAuth2 / OIDC enabled authorization services
paths:
  /g2p/v0.1/oauth2/client/token:
    post:
      tags:
        - 1. OAuth2 / OIDC enabled authorization services
      summary: Provide access_token to registered clients/services.
      description: '<b>Client integration notes: </b><br> 1. This end point is in compliance with OAuth2 RFC 6749 to authenticate registered confidential clients with grant_type=client_credentials over HTTPS channel. <br> 2. Clients MUST obtain client_id, client_secret as part of client registration. <br> 2. Clients MUST ensure to secure sensitive information e.g, client_secret,  access_token, etc., <br> 3. RFC 6749 section 4.4.3 recommends NO support for refresh access_token. <br> 4. Successfully authenticated clients SHALL receive bearer type access_token. <br> 5. Clients MUST set access_token to x-access-token in HTTP header to access any g2p compliant api end points.<br> 6. Rest end points SHALL return <b>http status 401</b> when access_token is invalid or expired.<br>'
      operationId: post_oauth2_client_token
      parameters:
        - in: header
          name: date
          description: 'request timestamp in HTTP Date format - Tue, 06 Mar 2020 21:00:00 GMT'
          required: true
          schema:
            type: string
            example: 'Tue, 06 Mar 2020 21:00:00 GMT'
        - in: header
          name: x-request-id
          description: x-request-id to correlate every request across backend services
          required: true
          schema:
            type: string
            example: 18f484bd-3321-4754-b95e-8abed0c97b5d
        - in: header
          name: accept-language
          description: 'Default value: en'
          required: false
          schema:
            type: string
            example: en
      requestBody:
        description: ''
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  description: Value must be set to client_credentials
                  example: client_credentials
                client_id:
                  type: string
                  description: The client identifier issued to the client during the registration process described by RFC 6749 Section 2.2.
                  example: '1001'
                client_secret:
                  type: string
                  description: client secret shared to clients as part of client registration process or regualar rotation of client_secret.
                  example: 7Fjfp0ZBr1KtDRbnfVdmIw
                scope:
                  $ref: '#/components/schemas/OidcScope'
              required:
                - grant_type
                - client_id
                - client_secret
              description: Request entity to obtain access token using gant_type = client_credential
      responses:
        '200':
          description: ''
          headers:
            x-request-id:
              $ref: '#/components/headers/x-request-id'
            x-correlation-id:
              $ref: '#/components/headers/x-correlation-id'
            date:
              $ref: '#/components/headers/date'
            x-processing-time:
              $ref: '#/components/headers/x-processing-time'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ClientToken'
        '400':
          description: 'Syntactic errors <br> <b>code : message</b> <br> 400-1000 : tbd <br> 400-1001: tbd <br>'
          headers:
            x-request-id:
              $ref: '#/components/headers/x-request-id'
            x-correlation-id:
              $ref: '#/components/headers/x-correlation-id'
            date:
              $ref: '#/components/headers/date'
            x-processing-time:
              $ref: '#/components/headers/x-processing-time'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 'Authorization errors due to invalid authorization / access token<br> <b>code : message</b> <br> 401-1000 : tbd <br> 401-1001: tbd <br>'
          headers:
            x-request-id:
              $ref: '#/components/headers/x-request-id'
            x-correlation-id:
              $ref: '#/components/headers/x-correlation-id'
            date:
              $ref: '#/components/headers/date'
            x-processing-time:
              $ref: '#/components/headers/x-processing-time'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 'Internal server error, Please retry with exponential backup strategies and contact tech support: <br> <b>code : message</b> <br> 500-1000 : tbd <br> 500-1001 : tbd <br>'
          headers:
            x-request-id:
              $ref: '#/components/headers/x-request-id'
            x-correlation-id:
              $ref: '#/components/headers/x-correlation-id'
            date:
              $ref: '#/components/headers/date'
            x-processing-time:
              $ref: '#/components/headers/x-processing-time'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
components:
  schemas:
    PaymentBatch:
      type: object
      description: Payment list as a collection for bulk processing
      properties:
        header:
          $ref: '#/components/schemas/PaymentBatchHeader'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
      required:
        - header
        - payments
    PaymentBatchStatus:
      type: object
      description: Payments status list as a collection for bulk processing
      properties:
        header:
          $ref: '#/components/schemas/PaymentBatchStatusHeader'
        payments_status:
          type: array
          items:
            $ref: '#/components/schemas/PaymentStatus'
      required:
        - header
        - payments_status
    Payment:
      type: object
      description: Describes payment schema that enable transfer from payer to payee accounts. This entity supports immediate and scheduling one time payment request into future. Recurring payments is not part of the scope of this entity.
      properties:
        locale:
          $ref: '#/components/schemas/LanguageCode'
        request_id:
          description: Unique uuid set by social protect sytem while initiating the payment
          type: string
        request_datetime:
          description: Payment initiation request data time
          type: string
          format: date-time
          example: '2022-12-04T18:01:07+00:00'
        scheduled_datetime:
          description: 'For immediate payments, scheduled_datetime can be same as request_datetime'
          type: string
          format: date-time
          example: '2022-12-04T18:01:07+00:00'
        payer:
          $ref: '#/components/schemas/PaymentAddress'
        payee:
          $ref: '#/components/schemas/PaymentAddress'
        amount:
          $ref: '#/components/schemas/Amount'
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        info:
          description: Info to payer/payee.
          type: string
          maxLength: 40
        scheme_code:
          description: G2P social protection system defined scheme short code for easy reference
          type: string
          maxLength: 40
        additional_info:
          description: 'Additional info for interfacing DPGs platforms to integrate, reconcile'
          type: string
          maxLength: 1024
      required:
        - locale
        - request_id
        - date
        - payer
        - payee
        - amount
        - currency_code
    PaymentStatus:
      type: object
      description: Payment disbursement status for reconciliation at social protection system end
      properties:
        locale:
          $ref: '#/components/schemas/LanguageCode'
        reference_code:
          description: Unique uuid set by payment sytem while processing the payment
          type: string
        request_id:
          description: Unique uuid set by social protect sytem while initiating the payment
          type: string
        datetime:
          description: Payment status as on date-time
          type: string
          format: date-time
          example: '2022-12-04T18:01:07+00:00'
        payer:
          $ref: '#/components/schemas/PaymentAddress'
        payee:
          $ref: '#/components/schemas/PaymentAddress'
        amount:
          $ref: '#/components/schemas/Amount'
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        status:
          description: 'Status definitions: <br> 1. RCVD: Received; payment received <br> 2. PDNG: Pending; payment initiated <br> 3. RJCT: Rejected; payment initiated and has been rejected  <br> 4. ACSP: AcceptedSettlementInProcess; All preceding checks such as technical validation and customer profile are successful. Paymnet has been accepted for execution <br> 5. ACSC: AcceptedSettlementCompleted; Settlement on the Debtor''s account has been completed <br> 6. ACCC: AcceptedCreditSettlementCompleted; Settlement on the Creditor''s account has been completed'
          type: string
          enum:
            - RCVD
            - PDNG
            - RJCT
            - ACSP
            - ACSC
            - ACCC
        error_code:
          description: 'Additional error codes. TODO: enumurate detailed error codes!'
          type: string
          enum:
            - '1000'
            - '2000'
            - '3000'
            - '4000'
            - '5000'
            - '6000'
            - '7000'
            - '8000'
            - '9000'
        error_message:
          description: Additional error messages
          type: string
          enum:
            - '1000: Payment request entity errors'
            - '2000: Payment address resolution errors of payer/payee'
            - '3000: Payment processing related errors on payer side'
            - '4000: Payment processing related errors on payee side'
            - '5000: Reserved for future use'
            - '6000: Reserved for future use'
            - '7000: Reserved for future use'
            - '8000: Reserved for future use'
            - '9000: Technical errors'
        additional_info:
          description: 'Additional info for interfacing DPGs platforms to integrate, reconcile, etc., unstructured data.'
          type: string
          maxLength: 1024
      required:
        - locale
        - reference_code
        - request_id
        - datetime
        - payer
        - payee
        - amount
        - currency_code
        - status
    PaymentAddress:
      type: string
      description: '<br> 1. Payment address is a normative represenation of a financial address represented as account@provider <br> 3. Every payer/payee payment address must be resolved to an actual account number for processing the payment instruction<br> 4. Few examples: <br> - uid@pymt-rail e.g 12345@bsp <br> - uid@id-provider e.g 12345@mosip <br> - mobile@mobile-provider e.g 12345@m-pesa - account-id@bank-psp-code e.g 12345@gtbank.rwanda <br> - account-no@ifsc-code.ifsc.npci e.g 12345@HDFC0000001.ifsc.npci <br> - user-id@psp-code e.g. joeuser@mypsp <br> - token@psp-code e.g ot123456@mypsp <br> - cdbc-id@cdbc e.g. 12345@DCash'
      format: '^[a-zA-Z0-9.-]+@[a-zA-Z0-9.-]+$'
      example: 12345@mosip"
    PaymentBatchHeader:
      type: object
      description: Header to manage payment disbursement cycle
      properties:
        batch_id:
          type: string
          description: Unique id to manage payment disbursement cycle
        datetime:
          description: Batch requested date-time
          type: string
          format: date-time
          example: '2022-12-04T18:01:07+00:00'
        total_count:
          description: Total no of payment instructions in the batch request
          type: integer
          example: 20800
      required:
        - batch_id
        - datetime
        - total_count
    PaymentBatchStatusHeader:
      type: object
      description: Batch status header info to provide summary details on payment processing status
      properties:
        batch_id:
          type: string
          description: Unique id to manage payment disbursement cycle
        datetime:
          description: Batch response date-time
          type: string
          format: date-time
          example: '2022-12-04T18:01:07+00:00'
        total_count:
          description: Total no of payment instructions in the batch request
          type: integer
          example: 20800
        inprocess_count:
          description: 'No of payment instructions in process state. Status codes: RCVD, ACSP'
          type: integer
          example: 450
        success_count:
          description: 'Total no of payment instructions successfully processed. Status codes: ACSC, ACCC'
          type: integer
          example: 20300
        reject_count:
          description: 'Total no of payment instructions failed to process. Status codes: RJCT'
          type: integer
          example: 50
      required:
        - batch_id
        - datetime
        - total_count
        - inprocess_count
        - success_count
        - reject_count
    PaymentFile:
      type: object
      description: Payment disbursement file for bulk processing of Payment entity in csv format
      properties:
        batch_id:
          type: string
          description: Unique id to manage payment disbursement cycle
        datetime:
          description: Batch requested date-time
          type: string
          format: date-time
          example: '2022-12-04T18:01:07+00:00'
        total_count:
          description: Total no of payment instructions in the batch request
          type: integer
          example: 20800
        fileName:
          description: payment instruction file representing Payment entity in csv format as *.txt file
          type: string
          format: binary
      required:
        - batch_id
        - datetime
        - total_count
        - fileName
    PaymentStatusFile:
      type: object
      description: Payment disbursement status for reconciliation at social protection system end representing PaymentStatus entity in csv file format
      properties:
        batch_id:
          type: string
          description: Unique id to manage payment disbursement cycle
        datetime:
          description: Batch response date-time
          type: string
          format: date-time
          example: '2022-12-04T18:01:07+00:00'
        total_count:
          description: Total no of payment instructions in the batch request
          type: integer
          example: 20800
        inprocess_count:
          description: 'No of payment instructions in process state. Status codes: RCVD, ACSP'
          type: integer
          example: 450
        success_count:
          description: 'Total no of payment instructions successfully processed. Status codes: ACSC, ACCC'
          type: integer
          example: 20300
        reject_count:
          description: 'Total no of payment instructions failed to process. Status codes: RJCT'
          type: integer
          example: 50
        fileName:
          description: payment disbursement status file representing PaymentStatus entity in csv format as *.txt file
          type: string
          format: binary
      required:
        - batch_id
        - datetime
        - total_count
        - inprocess_count
        - success_count
        - reject_count
        - fileName
    CurrencyCode:
      description: <br> 1. Currency code allocated as per ISO 4217 format.<br> 2. Codes for the representation of currencies and funds.
      type: string
      pattern: '^[A-Z]{3,3}$'
      example: SLL
    Amount:
      type: string
      description: Describes amount in decimal value format
      pattern: '^\d{1,13}\.\d{1,2}$'
    LanguageCode:
      description: indicates language code. G2P Connect supports country codes as per ISO 639.3 standard
      type: string
      pattern: '^[a-z]{3,3}$'
      example: kri
    TransactionId:
      description: ''
      type: object
      properties:
        transaction_id:
          type: string
          minLength: 0
          maxLength: 40
          example: '123456789020211216223812'
    ErrorResponse:
      type: object
      description: ''
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
      required:
        - code
        - message
    OAuth2ClientToken:
      type: object
      properties:
        access_token:
          description: Clients to share access_token in x-api-token HTTP header.
          type: string
          example: 2YotnFZFEjr1zCsicMWpAA
        token_type:
          description: ''
          type: string
          example: bearer
        expires_in:
          description: 'The lifetime in seconds of the access token.  For example, the value "3600" denotes that the access token will expire in one hour from the time the response was generated. If omitted, the authorization server SHOULD provide the expiration time via other means or document the default value.'
          type: string
          example: '36000'
      required:
        - access_token
        - token_type
      description: ''
    OAuth2ClientTokenRequest:
      $ref: '#/paths/~1g2p~1v0.1~1oauth2~1client~1token/post/requestBody/content/application~1x-www-form-urlencoded/schema'
    OidcScope:
      type: array
      description: 'Space delimited scopes requested or issued by an authorization service for OAuth2 client, OIDC complaint auth tokens. <br><br> <b>This is an indicative list... </b>'
      items:
        type: string
        enum:
          - payment-disburse
          - payment-status
          - id-account-link
          - id-account-status
          - <etc>
      example:
        - payment-disburse
        - paymnet-status
        - id-account-link
        - id-account-status
  responses:
    200SuccessResponse:
      description: ''
      headers:
        x-request-id:
          $ref: '#/components/headers/x-request-id'
        x-correlation-id:
          $ref: '#/components/headers/x-correlation-id'
        date:
          $ref: '#/components/headers/date'
        x-processing-time:
          $ref: '#/components/headers/x-processing-time'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionId'
    400ErrorResponse:
      $ref: '#/paths/~1g2p~1v0.1~1oauth2~1client~1token/post/responses/400'
    401ErrorResponse:
      $ref: '#/paths/~1g2p~1v0.1~1oauth2~1client~1token/post/responses/401'
    500ErrorResponse:
      $ref: '#/paths/~1g2p~1v0.1~1oauth2~1client~1token/post/responses/500'
    200SuccessOAuth2ClientTokenResponse:
      $ref: '#/paths/~1g2p~1v0.1~1oauth2~1client~1token/post/responses/200'
  headers:
    cache-control-nostore:
      schema:
        type: string
        enum:
          - no-store
        example: no-store
      required: true
    cache-control-private:
      schema:
        type: string
        enum:
          - private
        example: private
      required: true
    date:
      schema:
        type: string
        example: 'Tue, 06 Mar 2020 21:00:00 GMT'
      description: HTTP header format
      required: true
    pragma:
      schema:
        type: string
        example: no-cache
      required: true
    x-correlation-id:
      schema:
        type: string
        example: f16115fa-6c4a-4a8a-9856-08ea467f131b
      description: 'unique correlation id for each request '
    x-processing-time:
      schema:
        type: string
        example: 12
      description: api process time in ms
    x-request-id:
      schema:
        type: string
        example: 18f484bd-3321-4754-b95e-8abed0c97b5d
      description: echo back from request
  parameters:
    accept-language:
      $ref: '#/paths/~1g2p~1v0.1~1oauth2~1client~1token/post/parameters/2'
    date:
      $ref: '#/paths/~1g2p~1v0.1~1oauth2~1client~1token/post/parameters/0'
    transaction_id:
      in: path
      name: transaction_id
      description: transaction id
      required: true
      schema:
        type: string
        example: '123456789020211216223812'
    x-request-id:
      $ref: '#/paths/~1g2p~1v0.1~1oauth2~1client~1token/post/parameters/1'
