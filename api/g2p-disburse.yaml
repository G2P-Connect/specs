openapi: 3.0.0
info:
  title: Disbursement
  description: 'Discussions <a href= "https://github.com/G2P-Connect/.github/discussions">thread</a> <br><br> Social protection platform initiating G2P disbursements. Supports api, events and file based messaging'
  version: 0.1.0
  contact:
    name: G2P Connect
    email: info@g2pconnect.global
  license:
    name: G2P Connect License
    url: 'https://github.com/G2P-Connect/specs/blob/main/LICENSE'
servers:
  - url: 'https://sandbox.dpg.org/v0.1.0'
    description: Sandbox Server
paths:
  /disburse:
    post:
      summary: 'DSBT-001 : /disburse'
      description: Initiate payment through disbursement instructions
      operationId: post_g2p_disburse
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgReqHeader'
                    - properties:
                        action:
                          enum:
                            - disburse
                message:
                  type: object
                  properties:
                    transaction_id:
                      $ref: '#/components/schemas/TransactionId'
                    disburse:
                      type: array
                      items:
                        $ref: '#/components/schemas/DisburseRequest'
              required:
                - header
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - disburse
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
  /on-disburse:
    post:
      summary: 'DSBT-002 : /on-disburse'
      description: The callback is called by /disburse end point processing systems upon completing all disbursement instructions
      operationId: post_g2p_on-disburse
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgCallbackReqHeader'
                    - properties:
                        action:
                          enum:
                            - on-disburse
                message:
                  type: object
                  properties:
                    transaction_id:
                      $ref: '#/components/schemas/TransactionId'
                    disburse_status:
                      type: array
                      items:
                        $ref: '#/components/schemas/DisburseResponse'
              required:
                - header
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - on-disburse
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
  /disburse/status:
    post:
      summary: 'DSBT-003 : /disburse/status'
      description: 'Request for disbursement status from (e.g) social protection, Treasury systems'
      operationId: post_g2p_disburse_status
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgReqHeader'
                    - properties:
                        action:
                          enum:
                            - status
                message:
                  type: object
                  properties:
                    transaction_id:
                      $ref: '#/components/schemas/TransactionId'
                    reference_ids:
                      type: array
                      items:
                        $ref: '#/components/schemas/ReferenceId'
              required:
                - header
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - status
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
  /disburse/on-status:
    post:
      summary: 'DSBT-004 : /disburse/on-status'
      description: 'The callback endpoint is called by disbursement processing systems upon completing all disbursement instructions or at regular intervals '
      operationId: post_g2p_disburse_on-status
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/MsgSignature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/MsgCallbackReqHeader'
                    - properties:
                        action:
                          enum:
                            - on-status
                message:
                  type: object
                  properties:
                    transaction_id:
                      $ref: '#/components/schemas/TransactionId'
                    disburse_status:
                      type: array
                      items:
                        $ref: '#/components/schemas/DisburseResponse'
              required:
                - header
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/FileInfo'
                - properties:
                    action:
                      enum:
                        - status'
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - x-access-token: []
      deprecated: false
  '/disburse/status/{transaction_id}/{summary_only}':
    get:
      summary: 'DSBT-005: /disburse/status/{transaction_id}/{summary_only}'
      description: Get disbursement processing status by polling <br> 1. This end point is avaiable to poll disbursement processing status info. <br> 2. It is recommended to fetch with default summay_only flag to reduce load on the systems. <br> 3. Disbursement processing systems may chose to implement rate limiting at transaction_id level to avoid request flooding.
      operationId: get_g2p_disburse_status_by_msg_id
      parameters:
        - $ref: '#/components/parameters/accept-language'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/transaction_id'
        - $ref: '#/components/parameters/summary_only'
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          description: Acknowledgement of message received after successful validation of message and signature
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature:
                    $ref: '#/components/schemas/MsgSignature'
                  header:
                    allOf:
                      - $ref: '#/components/schemas/MsgCallbackReqHeader'
                      - properties:
                          action:
                            enum:
                              - status
                  message:
                    type: object
                    properties:
                      disburse_status:
                        type: array
                        items:
                          $ref: '#/components/schemas/DisburseResponse'
                required:
                  - header
      security:
        - x-access-token: []
      deprecated: false
  '/disburse/status/{reference_id}':
    get:
      summary: 'DSBT-006 : /disburse/status/{reference_id}'
      description: Get disbursement processing status by polling using reference_id <br> 1. This end point is avaiable to poll disbursement processing status info. <br> 2. Disbursement processing systems may chose to implement rate limiting at reference_id level to avoid request flooding.
      operationId: get_g2p_disburse_status_by_req_id
      parameters:
        - $ref: '#/components/parameters/accept-language'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/reference_id'
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          description: Acknowledgement of message received after successful validation of message and signature
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature:
                    $ref: '#/components/schemas/MsgSignature'
                  header:
                    allOf:
                      - $ref: '#/components/schemas/MsgCallbackReqHeader'
                      - properties:
                          action:
                            enum:
                              - status
                  message:
                    type: object
                    properties:
                      disburse_status:
                        $ref: '#/components/schemas/DisburseResponse'
                required:
                  - header
      security:
        - x-access-token: []
      deprecated: false
components:
  schemas:
    DisburseRequest:
      type: object
      description: Describes payment schema that enable transfer from payer to payee accounts. This entity supports immediate and scheduling one time payment request into future. Recurring payments is not part of the scope of this entity.
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        payer_fa:
          $ref: '#/components/schemas/FinancialAddress'
        payee_fa:
          $ref: '#/components/schemas/FinancialAddress'
        amount:
          $ref: '#/components/schemas/Amount'
        scheduled_timestamp:
          description: Disbursement initiation schedule timestamp in RFC3339 format. If not present the disbursement is for immediate purpose.
          type: string
          format: date-time
          example: '2022-12-04T17:00:00-04:00'
        payer_name:
          description: Payer account name for easy reference. Usually each scheme may have a seperate holding account.
          type: string
          example: Farmer draught relief scheme 2023
        payee_name:
          description: Payer name for easy reference. Usually beneficiary name as per scheme registration info
          type: string
          example: Joe John
        note:
          description: Note to payer/payee to reflect on statements
          type: string
          maxLength: 99
        purpose:
          $ref: '#/components/schemas/Purpose'
        instruction:
          description: 'Additional systems instruction for interfacing systems/platforms to integrate, reconcile'
          type: string
          maxLength: 999
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - payer_fa
        - payee_fa
        - amount
    DisburseResponse:
      type: object
      description: G2P Disbursement response i.e status of each disburemsent request for reconciliation by sender system
      properties:
        reference_id:
          $ref: '#/components/schemas/ReferenceId'
        timestamp:
          description: Disbursement response status datetime in RFC3339 format
          type: string
          format: date-time
          example: '2022-12-04T17:20:07-04:00'
        status:
          $ref: '#/components/schemas/RequestStatus'
        status_reason_code:
          $ref: '#/components/schemas/DisburseStatusReasonCode'
        status_reason_message:
          description: Status reason code message. Helps actionanble messaging for systems/end users
          type: string
          maxLength: 999
        instruction:
          description: 'Additional systems instruction for interfacing systems/platforms to integrate, reconcile'
          type: string
          maxLength: 999
        amount:
          $ref: '#/components/schemas/Amount'
        payer_fa:
          $ref: '#/components/schemas/FinancialAddress'
        payer_name:
          description: Payer account name for easy reference. Usually each scheme may have a seperate holding account.
          type: string
          example: Farmer draught relief scheme 2023
        payee_fa:
          $ref: '#/components/schemas/FinancialAddress'
        payee_name:
          description: Payer name for easy reference. Usually beneficiary name as per scheme registration info
          type: string
          example: Joe John
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        locale:
          $ref: '#/components/schemas/LanguageCode'
      required:
        - reference_id
        - timestamp
        - status
    DisburseStatusReasonCode:
      type: string
      description: 'Disburse status reason code with reason message: <br> - RJCT_INVALID_PAYER_FA; Payer Financial Address is invalid <br> - RJCT_INVALID_PAYEE_FA; Payee Financial Address is invalid <br> - RJCT_INVALID_AMOUNT; Invalid Amount <br> - RJCT_INALID_SHCHEDULE_TIMESTAMP; Schedule timestamp is invalid <br> - RJCT_INVALID_CURRENCY_CODE; Currency code is invalid <br> - RJCT_DUPLICATE_REFERENCE_ID; Duplicate reference id <br> - UKWN_NOT_FOUND_REFERENCE_ID; Reference id not found <br> - UKWN_NOT_FOUND_TRANSACTION_ID; Transaction id not found <br> - etc.,'
      enum:
        - RJCT_INVALID_PAYER_FA
        - RJCT_INVALID_PAYEE_FA
        - RJCT_INVALID_AMOUNT
        - RJCT_INALID_SHCHEDULE_TIMESTAMP
        - RJCT_INVALID_CURRENCY_CODE
        - UKWN_NOT_FOUND_REFERENCE_ID
        - UKWN_NOT_FOUND_TRANSACTION_ID
    Ack:
      description: 'Acknowledgement sent in response to an API call. If the implementation uses HTTP/S, then Ack must be returned in the same session. If receiver intends to respond with a callback, status must be set ACK otherwise NACK'
      type: object
      properties:
        status:
          type: string
          description: 'The status of the acknowledgement.<br> 1. If the request passes the validation criteria of the receiver, then this is set to ACK. <br> 2. If a receiver responds with status = `ACK` to a request, it is required to respond with a callback. <br> 3. If the request fails the validation criteria, then this is set to NACK. <br> 4. Additionally, if a receiver does not intend to respond with a callback even after the request meets the validation criteria, it should set this value to `NACK`. '
          enum:
            - ACK
            - NACK
    Amount:
      type: string
      description: Describes amount in decimal value format
      pattern: '^\d{1,13}\.\d{1,2}$'
    CurrencyCode:
      description: <br> 1. Currency code allocated as per ISO 4217 format.<br> 2. Codes for the representation of currencies and funds.
      type: string
      pattern: '^[A-Z]{3,3}$'
      example: SLL
    Error:
      description: 'Describes an error object that is returned to standard post call request. <br> 1. This object shall be sent when any request received by a participant is not parsable and valid. <br> 2. This object may be used for all transport mechanism to acknowledge the receipt of a message i.e HTTPS, FTP, Messaging etc., <br>'
      type: object
      properties:
        code:
          type: string
          description: Standard error code
          enum:
            - ERR_ACCESS_DENIED
            - ERR_INVALID_REQUEST
            - ERR_INVALID_SENDER
            - ERR_INVALID_SENDER_URI
            - ERR_INVALID_RECEIVER
            - ERR_INVALID_RECEIVER_URI
            - ERR_MANDATORY_HEADER_MISSING
            - ERR_INVALID_MESSAGE_ID
            - ERR_INVALID_TIMESTAMP
            - ERR_INVALID_ACTION
            - ERR_INVALID_SIGNATURE
            - ERR_INVALID_ENCRYPTION
            - ERR_INVALID_MESSAGE
            - ERR_SERVICE_UNAVAILABLE
        short_message:
          type: string
          description: short message to describe above error code
        long_message:
          type: string
          description: Human readable message describing the error. Used mainly for logging. Not recommended to be shown to the user.
        trace:
          type: string
          description: Detailed message for trouble shooting by systems
    FileInfo:
      type: object
      description: File info. Used in file upload feature using HTTPS
      properties:
        action:
          description: G2P Connect specific actions. Usually verb from the URI should go here to help store and fwd kind of processing requirements.
          type: string
        fileName:
          description: Disbursement instruction file representing Disburse or OnDisburse end point elements i.e signature/header/message entities as a file record
          type: string
          format: binary
        fileFormat:
          description: 'File content format. e.g json, csv, etc.,'
          type: string
          default: json
          example: csv
      required:
        - action
        - fileName
    FinancialAddress:
      type: string
      description: '<br> 1. Financial address is a normative represenation of a store of value account represented as account@provider <br> 2. Every payer/payee financial address must be resolved to an actual store of value account number for processing the payment instruction <br> 3. Few examples: <br> - uid@pymt-rail e.g 12345@bsp <br> - uid@id-provider e.g 12345@PhilID <br> - mobile@mobile-provider e.g 12345@m-pesa <br> - account-id@bank-psp-code e.g 12345@gtbank.rwanda <br> - account-no@ifsc-code.ifsc.npci e.g 12345@HDFC0000001.ifsc.npci <br> - user-id@psp-code e.g. joeuser@mypsp <br> - token@psp-code e.g ot123456@mypsp <br> - code@purpose-code.voucher-provider.voucher e.g 12345@food.sodexo.voucher, 12345@medical.xyz.voucher <br> - cdbc-id@cdbc e.g. 12345@DCash'
      format: '^[a-zA-Z0-9.-]+@[a-zA-Z0-9.-]+$'
      example: 12345@PhilID
    LanguageCode:
      description: indicates language code. G2P Connect supports country codes as per ISO 639.3 standard
      type: string
      pattern: '^[a-z]{3,3}$'
      example: kri
    MsgCallbackReqHeader:
      type: object
      description: Message header
      properties:
        version:
          description: g2p connect specification version being used
          type: string
          example: 0.1.0
        message_id:
          description: Unique message id to communicate between sender and receiver systems. Receiving system should echo the orignial message_id for correlations.
          type: string
          example: '123456789020211216223812'
        timestamp:
          description: Time of request generation in RFC3339 format
          type: string
          format: date-time
          example: '2022-12-04T18:02:35+00:00'
        action:
          description: G2P Connect specific action. Usually verb from the URI should go here to help store and fwd kind of processing requirements.
          type: string
        status:
          description: Message processing status code
          type: string
          enum:
            - REJECTED
            - IN_PROGRESS
            - COMPLETED
        status_reason_code:
          description: 'Status reason code, if any. Helps for systems integration'
          type: string
          maxLength: 99
        status_reason_message:
          description: 'Status reascon code message, if any, Helps actionanble messaging for system/end users'
          type: string
          maxLength: 999
        total_count:
          description: Total no of requests present in the message request
          type: integer
          example: 21800
        completed_count:
          description: No of requests in complteed state. Complete includes success and error requests due to funcational errors
          type: integer
          example: 50
        sender_id:
          description: 'send id registered with the receiving system. Used for authorization, encryption, digital sign verfication, etc., functions.'
          type: string
          example: '10089'
        sender_uri:
          description: sender url to accept callbacks
          type: string
          format: uri
          example: ''
        receiver_id:
          description: 'receiver id registered with the calling system. Used for authorization, encryption, digital sign verfication, etc., functions.'
          type: string
          example: '52077'
        receiver_uri:
          description: receiver url to accept callbacks
          type: string
          format: uri
          example: ''
      required:
        - message_id
        - timestamp
        - action
        - status
    MsgReqHeader:
      type: object
      description: Message header
      properties:
        version:
          description: g2p connect specification version being used
          type: string
          example: 0.1.0
        message_id:
          description: Unique message id to communicate between sender and receiver systems and it's scope is restricted to transport layer only to successfully devier the message between sender and receiver.
          type: string
          example: '123456789020211216223812'
        timestamp:
          description: Time of request generation in RFC3339 format
          type: string
          format: date-time
          example: '2022-12-04T18:01:07+00:00'
        action:
          description: G2P Connect specific action. Usually verb from the URI should go here to help store and fwd kind of processing requirements.
          type: string
        sender_id:
          description: 'send id registered with the receiving system. Used for authorization, encryption, digital sign verfication, etc., functions.'
          type: string
          example: '10089'
        sender_uri:
          description: sender url to accept callbacks
          type: string
          format: uri
          example: 'https://pymts.sender.org/callback/g2p/on-disburse'
        receiver_id:
          description: 'receiver id registered with the calling system. Used for authorization, encryption, digital sign verfication, etc., functions.'
          type: string
          example: '52077'
        receiver_uri:
          description: receiver url to accept callbacks
          type: string
          format: uri
          example: ''
        total_count:
          description: Total no of requests present in the message request
          type: integer
          example: 21800
      required:
        - message_id
        - timestamp
    MsgSignature:
      type: string
      description: Signature of message body verified using sender's signing public key
      example: 'Signature: keyId="{sender_id}|{unique_key_id}|{algorithm}",algorithm="ed25519",created="1606970629",expires="1607030629",headers="(created) (expires) digest",signature="Base64(signing string)'
    Purpose:
      description: 'Payment disbursement purpose e.g Salary, Farmer Relief 2023, etc.,'
      type: string
      maxLength: 99
      example: Farmer Relief 2023
    ReferenceId:
      type: string
      description: Unique reference id set by business txn initiating system. Used for co-relating the callback requests and to get status info
      example: '12345678901234567890'
    RequestStatus:
      type: string
      description: 'Request (e.g disburse, link, unlink, resolve, etc.,) status: <br> 1. RCVD: Received; Request received <br> 2. PDNG: Pending; Request initiated <br> 3. SUCC: Success; Request successful <br> 4. RJCT: Rejected; Request rejected <br> 5. UKWN: Unknown; Unknown error'
      enum:
        - RCVD
        - PDNG
        - SUCC
        - RJCT
        - UKWN
    Timestamp:
      type: string
      description: datetime in RFC3339 format
      format: date-time
      example: '2022-12-04T17:20:07-04:00'
    TransactionId:
      description: 'Unique transaction id set by sender to co-relate requests across interface end point, sessions, etc.,'
      type: string
      maxLength: 99
      example: 012345678901234567890
  parameters:
    accept-language:
      in: header
      name: accept-language
      description: 'Default value: en'
      required: false
      schema:
        type: string
        example: en
    timestamp:
      in: header
      name: timestamp
      description: 'request timestamp in HTTP Date format - Tue, 06 Mar 2020 21:00:00 GMT'
      required: true
      schema:
        type: string
        example: 'Tue, 06 Mar 2020 21:00:00 GMT'
    transaction_id:
      in: path
      name: transaction_id
      description: 'Unique transaction id set by sender as part of the initiating request to co-relate requests across interface end point, sessions, etc., For e.g transaction_id be used to find status using GET call or correlate the transaction as part of the callback call.'
      required: true
      schema:
        type: string
        maxLength: 99
        example: 012345678901234567890
    summary_only:
      in: path
      name: summary_only
      description: 'Optional. Defualt is false, If summary_only set to true then only the message header with stats / status to be returend as part of implementation'
      required: true
      schema:
        type: boolean
        default: true
    reference_id:
      in: path
      name: reference_id
      description: Unique reference id set by business txn initiating system. Used for co-relating the callback requests and to get status info
      required: true
      schema:
        type: string
        example: '12345678901234567890'
  responses:
    HttpErrorResponse:
      description: HTTP layer error details
      content:
        application/json:
          schema:
            type: object
            description: 'HTTP transport layer error codes. Used by components like gateways, LB responding with HTTP status codes 1xx, 2xx, 3xx, 4xx and 5xx'
            properties:
              error:
                type: object
                properties:
                  code:
                    type: string
                    description: error code
                  message:
                    type: string
                    description: error message
    Response:
      description: Acknowledgement of message received after successful validation of message and signature
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: object
                properties:
                  ack:
                    $ref: '#/components/schemas/Ack'
              error:
                $ref: '#/components/schemas/Error'
  securitySchemes:
    x-access-token:
      type: http
      scheme: bearer
      bearerFormat: jwt
      description: Authenticating using sessiong token issued by platfrom/system api gateway or auth services issuing session token apis using client id & secret
