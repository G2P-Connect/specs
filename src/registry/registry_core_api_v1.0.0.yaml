openapi: 3.0.3
info:
  title: Functional Registies Access APIs
  description: |
    APIs to access any functioanl registries. Few key features:
    1. [Standradising](https://g2pconnect.cdpi.dev/protocol/overview) message enevelope to seperate functional data strucutres.
    2. Systems implementing this standard core API infrastructure enables interoperability amonth themselves.
  version: 1.0.0
  contact:
    name: G2P Connect 
    email: info@cdpi.dev
  license:
    name: CDPI CC BY-SA 4.0
    url: https://github.com/G2P-Connect/specs/blob/draft/LICENSE.md
externalDocs:
  description: G2P Connect Registry Interfaces
  url: https://g2pconnect.cdpi.dev/protocol/interfaces/registries
servers:
  - url: "https://sandbox.spdci.org/namespace/v1.0.0"
    description: Sandbox Server
tags: 
  - name: Async
    description: Async endpoints
  - name: Sync 
    description: Sync endpoints
  - name: Schemas
    description: Schemas
paths:
 /registry/search:
  post: 
    summary: "/registry/search"
    description: Search person(s) in registry using identifier or custome attributes
    operationId: post_reg_search
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - search
                message:
                  type: object
                  description: The search data using which registry search to be performed
                  oneOf:
                    - $ref: "#/components/schemas/SearchRequest"
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - search
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
 /registry/on-search:
  post: 
    summary: "/registry/on-search"
    description: Search results through callback
    operationId: post_reg_on-search
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - on-search
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/SearchResponse'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - on-search
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
   
 /registry/subscribe:
  post: 
    summary: "/registry/subscribe"
    description: Subscribe to a life event with registry
    operationId: post_reg_subscribe
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - subscribe
                message:
                  type: object
                  description: Subscription request which contaion query with frequency and other info on which notification to be sent by registry to subscriber
                  oneOf:
                    - $ref: "#/components/schemas/SubscribeRequest"
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - subscribe
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
#  /registry/on-subscribe:
#   post: 
#     summary: "/registry/on-subscribe"
#     description: Subscribe results through callback
#     operationId: post_reg_on-subscribe
#     tags: 
#       -  Async
#     requestBody:
#       description: ""
#       required: true
#       content:
#         application/json:
#           schema:
#               type: object
#               properties:
#                 signature:  
#                   $ref: "#/components/schemas/MsgSignature"
#                 header:
#                   allOf:
#                     - $ref: "#/components/schemas/MsgHeader_V1.0.0"
#                     - properties:
#                         action:
#                           enum:
#                             - on-subscribe
#                 message:
#                   type: object
#                   description: Subscription information 
#                   oneOf:
#                     - $ref: "#/components/schemas/SubscribeResponse"
#                     - $ref: "#/components/schemas/EncryptedMessage"
#               required:
#                 - header
#                 - message
#         multipart/form-data:
#           schema:
#             allOf:
#               - $ref: "#/components/schemas/FileInfo"
#               - properties:
#                   action:
#                     enum:
#                       - on-subscribe
#     responses:
#         default:
#           $ref: "#/components/responses/Response"
#         '401':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '403':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '500':
#           $ref: "#/components/responses/HttpErrorResponse"
#     security:
#       - x-access-token: [ ]
#     deprecated: false
#  /registry/unsubscribe:
#   post: 
#     summary: "/registry/unsubscribe"
#     description: Unsubscribe to a life event
#     operationId: post_reg_unsubscribe
#     tags: 
#       -  Async
#     requestBody:
#       description: ""
#       required: true
#       content:
#         application/json:
#           schema:
#               type: object
#               properties:
#                 signature:  
#                   $ref: "#/components/schemas/MsgSignature"
#                 header:
#                   allOf:
#                     - $ref: "#/components/schemas/MsgHeader_V1.0.0"
#                     - properties:
#                         action:
#                           enum:
#                             - unsubscribe
#                 message:
#                   type: object
#                   description: The unsubscribe request that contain subscription ids which to be removed from subscription list 
#                   oneOf:
#                     - $ref: "#/components/schemas/UnSubscribeRequest"
#                     - $ref: "#/components/schemas/EncryptedMessage"
#               required:
#                 - header
#                 - message
#         multipart/form-data:
#           schema:
#             allOf:
#               - $ref: "#/components/schemas/FileInfo"
#               - properties:
#                   action:
#                     enum:
#                       - unsubscribe
#     responses:
#         default:
#           $ref: "#/components/responses/Response"
#         '401':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '403':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '500':
#           $ref: "#/components/responses/HttpErrorResponse"
#     security:
#       - x-access-token: [ ]
#     deprecated: false
#  /registry/on-unsubscribe:
#   post: 
#     summary: "/registry/on-unsubscribe"
#     description: Unsubscribe to a life event with registry
#     operationId: post_reg_on-unsubscribe
#     tags: 
#       -  Async
#     requestBody:
#       description: ""
#       required: true
#       content:
#         application/json:
#           schema:
#               type: object
#               properties:
#                 signature:  
#                   $ref: "#/components/schemas/MsgSignature"
#                 header:
#                   allOf:
#                     - $ref: "#/components/schemas/MsgHeader_V1.0.0"
#                     - properties:
#                         action:
#                           enum:
#                             - on-unsubscribe
#                 message:
#                   type: object
#                   oneOf:
#                     - $ref: "#/components/schemas/UnSubscribeResponse"
#                     - $ref: "#/components/schemas/EncryptedMessage"
#               required:
#                 - header
#                 - message
#         multipart/form-data:
#           schema:
#             allOf:
#               - $ref: "#/components/schemas/FileInfo"
#               - properties:
#                   action:
#                     enum:
#                       - on-unsubscribe
#     responses:
#         default:
#           $ref: "#/components/responses/Response"
#         '401':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '403':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '500':
#           $ref: "#/components/responses/HttpErrorResponse"
#     security:
#       - x-access-token: [ ]
#     deprecated: false
#  /registry/subscriptions:
#   post: 
#     summary: "/registry/subscriptions"
#     description: To retrieve list of all subscription
#     operationId: post_reg_subscriptions
#     tags: 
#       -  Async
#     requestBody:
#       description: ""
#       required: true
#       content:
#         application/json:
#           schema:
#               type: object
#               properties:
#                 signature:  
#                   $ref: "#/components/schemas/MsgSignature"
#                 header:
#                   allOf:
#                     - $ref: "#/components/schemas/MsgHeader_V1.0.0"
#                     - properties:
#                         action:
#                           enum:
#                             - subscriptions
#                 message:
#                   type: object
#                   description: To perform search based on registry type or event type
#                   oneOf:
#                     - $ref: "#/components/schemas/SubscriptionListRequest"
#                     - $ref: "#/components/schemas/EncryptedMessage"
#               required:
#                 - header
#                 - message
#         multipart/form-data:
#           schema:
#             allOf:
#               - $ref: "#/components/schemas/FileInfo"
#               - properties:
#                   action:
#                     enum:
#                       - subscriptions
#     responses: 
#         default:
#           $ref: "#/components/responses/Response"
#         '401':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '403':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '500':
#           $ref: "#/components/responses/HttpErrorResponse"
#     security:
#       - x-access-token: [ ]
#     deprecated: false
#  /registry/on-subscriptions:
#   post: 
#     summary: "/registry/on-subscriptions"
#     description: To retrive list of subscriptions
#     operationId: post_reg_on-subscriptions
#     tags: 
#       -  Async
#     requestBody:
#       description: ""
#       required: true
#       content:
#         application/json:
#           schema:
#               type: object
#               properties:
#                 signature:  
#                   $ref: "#/components/schemas/MsgSignature"
#                 header:
#                   allOf:
#                     - $ref: "#/components/schemas/MsgHeader_V1.0.0"
#                     - properties:
#                         action:
#                           enum:
#                             - on-subscriptions
#                 message:
#                   type: object
#                   description: The resposne to subscriber with list of subscriptions
#                   oneOf:
#                     - $ref: "#/components/schemas/SubscriptionListResponse"
#                     - $ref: "#/components/schemas/EncryptedMessage"
#               required:
#                 - header
#                 - message
#         multipart/form-data:
#           schema:
#             allOf:
#               - $ref: "#/components/schemas/FileInfo"
#               - properties:
#                   action:
#                     enum:
#                       - on-subscriptions
#     responses: 
#         default:
#           $ref: "#/components/responses/Response"
#         '401':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '403':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '500':
#           $ref: "#/components/responses/HttpErrorResponse"
#     security:
#       - x-access-token: [ ]
#     deprecated: false
 /registry/notify:
  post: 
    summary: "/registry/notify"
    description: Registry to notify a life event to subscrbiers
    operationId: post_reg_notify
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - notify
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/NotifyEventRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - notify
    responses:
        default:
          $ref: "#/components/responses/HttpErrorResponse"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
 /registry/txn/status:
  post: 
    summary: "/registry/txn/status"
    description: Perform async status check of previous civil registry transanctions using transaction_id and/or reference_id(s)
    operationId: post_reg_txnstatus
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - subscribe
                            - notify
                            - on-search
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/TxnStatusRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - subscribe
                      - notify
                      - on-search
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
 /registry/txn/on-status:
  post: 
    summary: "/registry/txn/on-status"
    description: Response to async status check of previous civil registrt transanctions using callback
    operationId: post_reg_on-txnstatus
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - subscribe
                            - notify
                            - on-search
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/TxnStatusResponse'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - subscribe
                      - notify
                      - on-search
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
 /registry/sync/search:
  post: 
    summary: "/registry/sync/search"
    description: Search person(s) in registry using identifier or custome attributes
    operationId: post_reg_sync_search
    tags: 
      -  Sync
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - search
                message:
                  type: object
                  description: The search data using which registry search to be performed
                  anyOf:
                    - $ref: '#/components/schemas/SearchRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
                - message
    responses:
        default:
          description: "Registry search response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature:  
                    $ref: "#/components/schemas/MsgSignature"
                  header:
                    allOf:
                      - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                      - properties:
                          action:
                            enum:
                              - on-search
                  message:
                    type: object
                    oneOf:
                      - $ref: '#/components/schemas/SearchResponse'
                      - $ref: '#/components/schemas/EncryptedMessage'
                required:
                  - header
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
#  /registry/sync/subscribe:
#   post: 
#     summary: " /registry/sync/subscribe"
#     description: Subscribe to a life event with registry
#     operationId: post_reg_sync_subscribe
#     tags: 
#       -  Sync
#     requestBody:
#       description: ""
#       required: true
#       content:
#         application/json:
#           schema:
#               type: object
#               properties:
#                 signature:  
#                   $ref: "#/components/schemas/MsgSignature"
#                 header:
#                   allOf:
#                     - $ref: "#/components/schemas/MsgHeader_V1.0.0"
#                     - properties:
#                         action:
#                           enum:
#                             - subscribe
#                 message:
#                   type: object
#                   description: Subscription request which contaion query with frequency and other info on which notification to be sent by registry to subscriber
#                   oneOf:
#                     - $ref: "#/components/schemas/SubscribeRequest"
#                     - $ref: "#/components/schemas/EncryptedMessage"
#               required:
#                 - header
#                 - message
#         multipart/form-data:
#           schema:
#             allOf:
#               - $ref: "#/components/schemas/FileInfo"
#               - properties:
#                   action:
#                     enum:
#                       - subscribe
#     responses:
#         default:
#           description: "Subscription response"
#           content:
#             application/json:
#               schema:
#                 type: object
#                 properties:
#                   signature:  
#                     $ref: "#/components/schemas/MsgSignature"
#                   header:
#                     allOf:
#                       - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
#                   message:
#                     type: object
#                     oneOf:
#                       - $ref: '#/components/schemas/SubscribeResponse'
#                       - $ref: '#/components/schemas/EncryptedMessage'
#                 required:
#                   - header
#         '401':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '403':
#           $ref: "#/components/responses/HttpErrorResponse"
#         '500':
#           $ref: "#/components/responses/HttpErrorResponse"
#     security:
#       - x-access-token: [ ]
#     deprecated: false
 /registry/sync/subscriptions:
  post: 
    summary: "/registry/sync/subscriptions"
    description: To retrive list of subscriptions
    operationId: post_reg_sync_subscriptions
    tags: 
      -  Sync
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - fetch_subscriptions
                message:
                  type: object
                  description: To perform search based on registry type or event type
                  oneOf:
                    - $ref: "#/components/schemas/FetchSubscriptionsRequest"
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
    responses: 
        default:
          description: "Subscription list response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature:  
                    $ref: "#/components/schemas/MsgSignature"
                  header:
                    allOf:
                      - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                  message:
                    type: object
                    oneOf:
                      - $ref: '#/components/schemas/FetchSubscriptionsResponse'
                      - $ref: '#/components/schemas/EncryptedMessage'
                required:
                  - header
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
 /registry/sync/unsubscribe:
  post: 
    summary: "/registry/sync/unsubscribe"
    description: Unsubscribe to a life event with registry
    operationId: post_reg_sync_unsubscribe
    tags: 
      -  Sync
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - unsubscribe
                message:
                  type: object
                  description: The unsubscribe request that contain subscription ids which to be removed from subscription list
                  oneOf:
                    - $ref: "#/components/schemas/UnSubscribeRequest"
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - unsubscribe
    responses:
        default:
          description: "Unsubscribe response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature:  
                    $ref: "#/components/schemas/MsgSignature"
                  header:
                    allOf:
                      - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                  message:
                    type: object
                    oneOf:
                      - $ref: '#/components/schemas/UnSubscribeResponse'
                      - $ref: '#/components/schemas/EncryptedMessage'
                required:
                  - header
                  - message
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
 /registry/sync/txn/status:
  post: 
    summary: "/registry/sync/txn/status"
    description: Perform async status check of previous civil registry transanctions using transaction_id and/or reference_id(s)
    operationId: post_reg_sync_txnstatus
    tags: 
      -  Sync
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - search
                            - subscribe
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/TxnStatusRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
                - message
    responses:
        default:
          description: "Transaction status check response"
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    signature:  
                      $ref: "#/components/schemas/MsgSignature"
                    header:
                      allOf:
                        - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                        - properties:
                            action:
                              enum:
                                - on-search
                                - notify
                    message:
                      type: object
                      oneOf:
                        - $ref: '#/components/schemas/TxnStatusResponse'
                        - $ref: '#/components/schemas/EncryptedMessage'
                  required:
                    - header
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - x-access-token: [ ]
    deprecated: false
components:
  schemas:
    ###### src/extensions/cdpi schema objects
    cdpi_PersonId: 
      $ref: ../extensions/cdpi/PersonId.yaml

    ###### src/extensions/dci schema objects
    dci_IdentifierType: 
      $ref: ../extensions/dci/IdentifierType.yaml
    dci_IdentifierTypeValue: 
      $ref: ../extensions/dci/IdentifierTypeValue.yaml
    dci_MaritalStatus: 
      $ref: ../extensions/dci/MaritalStatus.yaml
    dci_Name: 
      $ref: ../extensions/dci/Name.yaml
    dci_PersonRecord: 
      $ref: ../extensions/dci/PersonRecord.yaml
    dci_RecordType: 
      $ref: ../extensions/dci/RecordType.yaml
    dci_Sex: 
      $ref: ../extensions/dci/Sex.yaml
    dci_VitalEvents: 
      $ref: ../extensions/dci/VitalEvents.yaml

    ###### src/extensions/fhir schema objects
    
    ###### src/extensions/google schema objects
    GooglePlusCode: 
      $ref: ../extensions/google/GooglePlusCode.yaml

    ###### src/extensions/mosip schema objects
    mosip_EventType: 
      $ref: ../extensions/mosip/EventType.yaml
    mosip_LangaugeValue: 
      $ref: ../extensions/mosip/LangaugeValue.yaml
    mosip_LanguageValueList: 
      $ref: ../extensions/mosip/LanguageValueList.yaml
    mosip_MOSIPVerifiableCredential: 
      $ref: ../extensions/mosip/MOSIPVerifiableCredential.yaml
    mosip_RecordType: 
      $ref: ../extensions/mosip/RecordType.yaml
    mosip_RegistrationRecord: 
      $ref: ../extensions/mosip/RegistrationRecord.yaml  
        
    ###### src/extensions/nid schema objects
    nid_DeceasedRecord: 
      $ref: ../extensions/nid/DeceasedRecord.yaml
    nid_Document: 
      $ref: ../extensions/nid/Document.yaml
    nid_EKycDetails: 
      $ref: ../extensions/nid/EKycDetails.yaml
    nid_RecordType: 
      $ref: ../extensions/nid/RecordType.yaml
    nid_ResidentAddress:
      $ref: ../extensions/nid/ResidentAddress.yaml
    nid_ResidentLocalAddress:
      $ref: ../extensions/nid/ResidentLocalAddress.yaml
    nid_ResidentLocalName:
      $ref: ../extensions/nid/ResidentLocalName.yaml
    nid_ResidentNationality:
      $ref: ../extensions/nid/ResidentNationality.yaml
    nid_ResidentPhoto:
      $ref: ../extensions/nid/ResidentPhoto.yaml
    nid_ResidentRecord:
      $ref: ../extensions/nid/ResidentRecord.yaml
    
    ###### src/extensions/openid schema objects
    openid_Address: 
      $ref: ../extensions/openid/Address.yaml
    openid_PersonRecord:
      $ref: ../extensions/openid/PersonRecord.yaml
    openid_PersonDocDetails: 
      $ref: ../extensions/openid/PersonDocDetails.yaml
   
    ###### src/registry/schema/civil schema objects
    civilReg_EventType: 
      $ref: schema/civil/EventType.yaml
    civilReg_PersonRecord: 
      $ref: schema/civil/PersonRecord.yaml
    civilReg_RecordType: 
        $ref: schema/civil/RecordType.yaml
    civilReg_RelatedPerson: 
      $ref: schema/civil/RelatedPerson.yaml

    ###### src/registry/schema/core schema objects
    coreReg_AllEvents: 
      $ref: schema/core/AllEvents.yaml
    coreReg_AllQueries: 
      $ref: schema/core/AllQueries.yaml 
    coreReg_AllRecords: 
      $ref: schema/core/AllRecords.yaml
    coreReg_AllRecordTypes: 
      $ref: schema/core/AllRecordTypes.yaml
    coreReg_EventType: 
      $ref: schema/core/EventType.yaml
    FetchSubscriptionsRequest: 
      $ref: schema/core/FetchSubscriptionsRequest.yaml
    FetchSubscriptionsResponse:
      $ref: schema/core/FetchSubscriptionsResponse.yaml
    NotifyEventRequest: 
      $ref: schema/core/NotifyEventRequest.yaml
    other_RecordType: 
      $ref: schema/core/RegistryRecordType.yaml
    coreReg_Type: 
      $ref: schema/core/RegistryType.yaml
    SearchRequest: 
      $ref: schema/core/SearchRequest.yaml
    SearchResponse: 
      $ref: schema/core/SearchResponse.yaml
    SearchStatusReasonCode: 
      $ref: schema/core/SearchStatusReasonCode.yaml
    SubscribeRequest: 
      $ref: schema/core/SubscribeRequest.yaml
    # SubscribeResponse: 
    #   $ref: schema/core/SubscribeResponse.yaml
    SubscribeStatusReasonCode: 
      $ref: schema/core/SubscribeStatusReasonCode.yaml
    SubscriptionCode: 
      $ref: schema/core/SubscriptionCode.yaml
    SubscriptionInfo:
      $ref: schema/core/SubscriptionInfo.yaml
    SubscriptionStatus:
        $ref: schema/core/SubscriptionStatus.yaml
    TxnStatusRequest: 
      $ref: schema/core/TxnStatusRequest.yaml            
    TxnStatusResponse: 
      $ref: schema/core/TxnStatusResponse.yaml  
    UnSubscribeRequest: 
      $ref: schema/core/UnSubscribeRequest.yaml
    UnSubscribeResponse: 
      $ref: schema/core/UnSubscribeResponse.yaml
    UnSubscribeStatusReasonCode: 
      $ref: schema/core/UnSubscribeStatusReasonCode.yaml           
  
    ###### Common schema objects
    Ack: 
      $ref: ../common/schema/Ack.yaml
    AdditionalInfo:
      $ref: ../common/schema/AdditionalInfo.yaml
    AttributeNameValue: 
      $ref: ../common/schema/AttributeNameValue.yaml
    AttributeNameValueList: 
      $ref: ../common/schema/AttributeNameValueList.yaml
    AttributeValue: 
      $ref: ../common/schema/AttributeValue.yaml
    Consent: 
      $ref: ../common/schema/Consent.yaml
    DateTime: 
      $ref: ../common/schema/DateTime.yaml
    EncryptedMessage: 
      $ref: ../common/schema/EncryptedMessage.yaml
    Error: 
      $ref: ../common/schema/Error.yaml
    EventFrequency:
      $ref: ../common/schema/EventFrequency.yaml
    ExpCondition: 
      $ref: ../common/schema/ExpCondition.yaml
    ExpOperator: 
      $ref: ../common/schema/ExpOperator.yaml
    Expression: 
      $ref: ../common/schema/Expression.yaml
    ExpressionList: 
      $ref: ../common/schema/ExpressionList.yaml
    ExpressionResult: 
      $ref: ../common/schema/ExpressionResult.yaml
    ExpressionResultList: 
      $ref: ../common/schema/ExpressionResultList.yaml
    ExpressionWithCondition: 
      $ref: ../common/schema/ExpressionWithCondition.yaml
    ExpressionWithConditionList: 
      $ref: ../common/schema/ExpressionWithConditionList.yaml
    FileInfo: 
      $ref: ../common/schema/FileInfo.yaml
    LanguageCode: 
      $ref: ../common/schema/LanguageCode.yaml
    LatLong: 
      $ref: ../common/schema/LatLong.yaml
    MsgCallbackHeader_V1.0.0: 
      $ref: ../common/schema/MsgCallbackHeader_V1.0.0.yaml
    MsgHeader_V1.0.0: 
      $ref: ../common/schema/MsgHeader_V1.0.0.yaml
    MsgHeaderStatusReasonCode: 
      $ref: ../common/schema/MsgHeaderStatusReasonCode.yaml
    MsgSignature: 
      $ref:  ../common/schema/MsgSignature.yaml
    Pagination: 
      $ref: ../common/schema/Pagination.yaml
    PaginationRequest: 
      $ref: ../common/schema/PaginationRequest.yaml
    ReferenceId: 
      $ref: ../common/schema/ReferenceId.yaml
    ReferenceIdList: 
      $ref: ../common/schema/ReferenceIdList.yaml
    RequestStatus: 
      $ref: ../common/schema/RequestStatus.yaml
    SearchSort: 
      $ref: ../common/schema/SearchSort.yaml
    SearchSortList: 
      $ref: ../common/schema/SearchSortList.yaml
    TransactionId:  
      $ref: ../common/schema/TransactionId.yaml
  parameters:
    accept-language:
      $ref: ../common/parameter/accept-language.yaml
    timestamp:
      $ref: ../common/parameter/timestamp.yaml
    transaction_id:
      $ref: ../common/parameter/transaction_id.yaml
    summary_only:
      $ref: ../common/parameter/summary_only.yaml
    beneficiary_id:
      $ref: ../common/parameter/beneficiary_id.yaml
  responses: 
    HttpErrorResponse:
      $ref: ../common/response/HttpErrorResponse.yaml       
    Response:
      $ref: ../common/response/Response.yaml    
  securitySchemes:
    x-access-token:
      $ref: ../common/security/x-access-token.yaml